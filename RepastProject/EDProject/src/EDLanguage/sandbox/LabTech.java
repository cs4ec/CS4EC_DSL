package EDLanguage.sandbox;

/*Generated by MPS */

import simcore.agents.Actor;
import simcore.action.Action;
import repast.simphony.space.continuous.ContinuousSpace;
import repast.simphony.space.grid.Grid;
import simcore.Signals.Signal;
import simcore.action.ActionStep;
import simcore.action.basicAction.MoveAction;
import simcore.action.basicAction.OccupyAction;
import simcore.basicStructures.Desk;
import simcore.action.basicAction.StayForTimeAction;
import simcore.action.basicAction.conditions.TestResultCondition;
import simcore.agents.Patient;
import simcore.Signals.DirectSignal;
import simcore.action.basicAction.SendSignalAction;

public class LabTech extends Actor {

  public Action actionBuilder;

  public LabTech(ContinuousSpace<Object> space, Grid<Object> grid) {
    super(space, grid); 
    mintMyMaxPatients = 0;
  }

  public LabTech(ContinuousSpace<Object> space, Grid<Object> grid, String pstrStartLocation) {
    super(space, grid, pstrStartLocation);
  }

  public Action BuildActionFromSignal(Signal s) {
    switch (s.getName()) {
      case "":
        break;
      case "RequestPCR":
        actionBuilder = new Action("StartPCR");
        this.InitStartPCR(s);
        break;
      default:
        System.out.println("Set mission: " + s.getName() + " failed!");
        return actionBuilder;
    }
    return actionBuilder;
  }

  public void InitStartPCR(Signal s) {

    Signal sendSignalTemp = new Signal();

    actionBuilder.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(s.GetData("replyTo"))));
    actionBuilder.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(ReadMap().FindPlace("Lab"))));
    actionBuilder.WithStep(new ActionStep().WithName("").WithAction(new OccupyAction().WithTarget(Desk.class)));
    actionBuilder.WithStep(new ActionStep().WithName("").WithAction(new StayForTimeAction().WithTimeSpan(LabSymptomaticPCR.getInstance().getProcessingTime())));
    if (CheckCondition(new TestResultCondition().WithTest(LabSymptomaticPCR.getInstance()).WithPatient((Patient) s.GetData("patient")))) {
      sendSignalTemp = new PCRCompleteSignal();
      ((DirectSignal) sendSignalTemp).setTarget(s.GetData("replyTo"));
      sendSignalTemp.AddData("patient", s.GetData("patient"));
      actionBuilder.WithStep(new ActionStep().WithName("").WithAction(new SendSignalAction().WithSignal(sendSignalTemp)));
    } else {
      sendSignalTemp = new PCRCompleteSignal();
      ((DirectSignal) sendSignalTemp).setTarget(s.GetData("replyTo"));
      sendSignalTemp.AddData("patient", s.GetData("patient"));
      actionBuilder.WithStep(new ActionStep().WithName("").WithAction(new SendSignalAction().WithSignal(sendSignalTemp)));
    }

  }

}

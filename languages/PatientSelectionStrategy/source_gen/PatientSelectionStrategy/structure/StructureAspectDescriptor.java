package PatientSelectionStrategy.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptRule = createDescriptorForRule();
  /*package*/ final ConceptDescriptor myConceptStrategy = createDescriptorForStrategy();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptRule, myConceptStrategy);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Rule:
        return myConceptRule;
      case LanguageConceptSwitch.Strategy:
        return myConceptStrategy;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PatientSelectionStrategy", "Rule", 0x5e1e5d68a1474fceL, 0x89202ed523701f78L, 0x78ac3096378db6L);
    b.class_(false, false, false);
    b.origin("r:013fd022-1788-4098-a4bd-63028dd3a227(PatientSelectionStrategy.structure)/33966321883909558");
    b.version(2);
    b.alias("rule");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStrategy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PatientSelectionStrategy", "Strategy", 0x5e1e5d68a1474fceL, 0x89202ed523701f78L, 0x78ac3096059984L);
    b.class_(false, false, false);
    b.origin("r:013fd022-1788-4098-a4bd-63028dd3a227(PatientSelectionStrategy.structure)/33966321880635780");
    b.version(2);
    b.aggregate("rules", 0x78ac3096378dc9L).target(0x5e1e5d68a1474fceL, 0x89202ed523701f78L, 0x78ac3096378db6L).optional(true).ordered(true).multiple(true).origin("33966321883909577").done();
    b.alias("patient selection strategy");
    return b.create();
  }
}

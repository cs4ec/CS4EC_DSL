package AgentLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIterable__BehaviorDescriptor = new Iterable__BehaviorDescriptor();
  private final BHDescriptor myAgentIterable__BehaviorDescriptor = new AgentIterable__BehaviorDescriptor();
  private final BHDescriptor myRoomSelectionCondition__BehaviorDescriptor = new RoomSelectionCondition__BehaviorDescriptor();
  private final BHDescriptor myActor__BehaviorDescriptor = new Actor__BehaviorDescriptor();
  private final BHDescriptor myBehaviourElement__BehaviorDescriptor = new BehaviourElement__BehaviorDescriptor();
  private final BHDescriptor myBehaviourSequence__BehaviorDescriptor = new BehaviourSequence__BehaviorDescriptor();
  private final BHDescriptor myBehaviour__BehaviorDescriptor = new Behaviour__BehaviorDescriptor();
  private final BHDescriptor myChoice__BehaviorDescriptor = new Choice__BehaviorDescriptor();
  private final BHDescriptor mySignalInitReference__BehaviorDescriptor = new SignalInitReference__BehaviorDescriptor();
  private final BHDescriptor mySendSignalAction__BehaviorDescriptor = new SendSignalAction__BehaviorDescriptor();
  private final BHDescriptor myAttribute__BehaviorDescriptor = new Attribute__BehaviorDescriptor();
  private final BHDescriptor myAttributeReference__BehaviorDescriptor = new AttributeReference__BehaviorDescriptor();
  private final BHDescriptor myAggregateAttributeMonitor__BehaviorDescriptor = new AggregateAttributeMonitor__BehaviorDescriptor();
  private final BHDescriptor myRoomSelectionStrategyLine__BehaviorDescriptor = new RoomSelectionStrategyLine__BehaviorDescriptor();
  private final BHDescriptor myAttributeMonitor__BehaviorDescriptor = new AttributeMonitor__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myActor__BehaviorDescriptor;
      case 1:
        return myAgentIterable__BehaviorDescriptor;
      case 2:
        return myAggregateAttributeMonitor__BehaviorDescriptor;
      case 3:
        return myAttribute__BehaviorDescriptor;
      case 4:
        return myAttributeMonitor__BehaviorDescriptor;
      case 5:
        return myAttributeReference__BehaviorDescriptor;
      case 6:
        return myBehaviour__BehaviorDescriptor;
      case 7:
        return myBehaviourElement__BehaviorDescriptor;
      case 8:
        return myBehaviourSequence__BehaviorDescriptor;
      case 9:
        return myChoice__BehaviorDescriptor;
      case 10:
        return myIterable__BehaviorDescriptor;
      case 11:
        return myRoomSelectionCondition__BehaviorDescriptor;
      case 12:
        return myRoomSelectionStrategyLine__BehaviorDescriptor;
      case 13:
        return mySendSignalAction__BehaviorDescriptor;
      case 14:
        return mySignalInitReference__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce2f6271L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x1c9634cb48bcf3cbL), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6ca3e29db4287123L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125516L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7117c8e6083740b4L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125519L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce306b7aL), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308546L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce30854aL), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x1c9634cb48bcf3caL), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x334005c7663c2373L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccaaf60L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f1890L), MetaIdFactory.conceptId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f0c93L)).seal();
}

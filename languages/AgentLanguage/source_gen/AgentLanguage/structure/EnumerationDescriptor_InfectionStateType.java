package AgentLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_InfectionStateType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_InfectionStateType() {
    super(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x4936c0ffdc6342dL, "InfectionStateType", "r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/329726013666112557");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_Symptomatic_0 = new EnumerationDescriptor.MemberDescriptor("Symptomatic", "Symptomatic", 0x4936c0ffdc6342eL, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/329726013666112558");
  private final EnumerationDescriptor.MemberDescriptor myMember_Asymptomatic_0 = new EnumerationDescriptor.MemberDescriptor("Asymptomatic", "Asymptomatic", 0x4936c0ffdc6342fL, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/329726013666112559");
  private final EnumerationDescriptor.MemberDescriptor myMember_Susceptible_0 = new EnumerationDescriptor.MemberDescriptor("Susceptible", "Susceptible", 0x4936c0ffdc63432L, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/329726013666112562");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x4936c0ffdc6342dL, 0x4936c0ffdc6342eL, 0x4936c0ffdc6342fL, 0x4936c0ffdc63432L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_Symptomatic_0, myMember_Asymptomatic_0, myMember_Susceptible_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "Symptomatic":
        return myMember_Symptomatic_0;
      case "Asymptomatic":
        return myMember_Asymptomatic_0;
      case "Susceptible":
        return myMember_Susceptible_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}

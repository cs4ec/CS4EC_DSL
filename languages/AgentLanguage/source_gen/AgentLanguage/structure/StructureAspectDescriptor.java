package AgentLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptActor = createDescriptorForActor();
  /*package*/ final ConceptDescriptor myConceptActorReference = createDescriptorForActorReference();
  /*package*/ final ConceptDescriptor myConceptActorTypeSignal = createDescriptorForActorTypeSignal();
  /*package*/ final ConceptDescriptor myConceptAdmitAction = createDescriptorForAdmitAction();
  /*package*/ final ConceptDescriptor myConceptAgentGenerator = createDescriptorForAgentGenerator();
  /*package*/ final ConceptDescriptor myConceptAgentGeneratorLine = createDescriptorForAgentGeneratorLine();
  /*package*/ final ConceptDescriptor myConceptAggregateAttributeMonitor = createDescriptorForAggregateAttributeMonitor();
  /*package*/ final ConceptDescriptor myConceptAndCondition = createDescriptorForAndCondition();
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptAttributeCondition = createDescriptorForAttributeCondition();
  /*package*/ final ConceptDescriptor myConceptAttributeDistributionLine = createDescriptorForAttributeDistributionLine();
  /*package*/ final ConceptDescriptor myConceptAttributeDistributionTable = createDescriptorForAttributeDistributionTable();
  /*package*/ final ConceptDescriptor myConceptAttributeExpressionReference = createDescriptorForAttributeExpressionReference();
  /*package*/ final ConceptDescriptor myConceptAttributeMonitor = createDescriptorForAttributeMonitor();
  /*package*/ final ConceptDescriptor myConceptAttributeReference = createDescriptorForAttributeReference();
  /*package*/ final ConceptDescriptor myConceptBehaviour = createDescriptorForBehaviour();
  /*package*/ final ConceptDescriptor myConceptBehaviourElement = createDescriptorForBehaviourElement();
  /*package*/ final ConceptDescriptor myConceptBehaviourElementReference = createDescriptorForBehaviourElementReference();
  /*package*/ final ConceptDescriptor myConceptBehaviourSequence = createDescriptorForBehaviourSequence();
  /*package*/ final ConceptDescriptor myConceptBinaryCondition = createDescriptorForBinaryCondition();
  /*package*/ final ConceptDescriptor myConceptChoice = createDescriptorForChoice();
  /*package*/ final ConceptDescriptor myConceptCompositeOrder = createDescriptorForCompositeOrder();
  /*package*/ final ConceptDescriptor myConceptCondition = createDescriptorForCondition();
  /*package*/ final ConceptDescriptor myConceptConsequenceElement = createDescriptorForConsequenceElement();
  /*package*/ final ConceptDescriptor myConceptConsequenceInStep = createDescriptorForConsequenceInStep();
  /*package*/ final ConceptDescriptor myConceptDataInstanceMap = createDescriptorForDataInstanceMap();
  /*package*/ final ConceptDescriptor myConceptDataMap = createDescriptorForDataMap();
  /*package*/ final ConceptDescriptor myConceptDescription = createDescriptorForDescription();
  /*package*/ final ConceptDescriptor myConceptDirectSignal = createDescriptorForDirectSignal();
  /*package*/ final ConceptDescriptor myConceptDischargeAction = createDescriptorForDischargeAction();
  /*package*/ final ConceptDescriptor myConceptExpressionWrapper = createDescriptorForExpressionWrapper();
  /*package*/ final ConceptDescriptor myConceptFollowOrder = createDescriptorForFollowOrder();
  /*package*/ final ConceptDescriptor myConceptHumanInstance = createDescriptorForHumanInstance();
  /*package*/ final ConceptDescriptor myConceptHumanInstanceFromSignal = createDescriptorForHumanInstanceFromSignal();
  /*package*/ final ConceptDescriptor myConceptIAmAtCondition = createDescriptorForIAmAtCondition();
  /*package*/ final ConceptDescriptor myConceptInfectionState = createDescriptorForInfectionState();
  /*package*/ final ConceptDescriptor myConceptIsExactlyOperator = createDescriptorForIsExactlyOperator();
  /*package*/ final ConceptDescriptor myConceptIsLessThanOperator = createDescriptorForIsLessThanOperator();
  /*package*/ final ConceptDescriptor myConceptKernelFCondition = createDescriptorForKernelFCondition();
  /*package*/ final ConceptDescriptor myConceptMessageSelectionStrategy = createDescriptorForMessageSelectionStrategy();
  /*package*/ final ConceptDescriptor myConceptMoveAction = createDescriptorForMoveAction();
  /*package*/ final ConceptDescriptor myConceptMoveOrder = createDescriptorForMoveOrder();
  /*package*/ final ConceptDescriptor myConceptNewPatientSignal = createDescriptorForNewPatientSignal();
  /*package*/ final ConceptDescriptor myConceptObjectInstance = createDescriptorForObjectInstance();
  /*package*/ final ConceptDescriptor myConceptOccupiableAvailabilityCondition = createDescriptorForOccupiableAvailabilityCondition();
  /*package*/ final ConceptDescriptor myConceptOccupiableInstance = createDescriptorForOccupiableInstance();
  /*package*/ final ConceptDescriptor myConceptOccupyAction = createDescriptorForOccupyAction();
  /*package*/ final ConceptDescriptor myConceptOccupyOrder = createDescriptorForOccupyOrder();
  /*package*/ final ConceptDescriptor myConceptOperator = createDescriptorForOperator();
  /*package*/ final ConceptDescriptor myConceptOrder = createDescriptorForOrder();
  /*package*/ final ConceptDescriptor myConceptOrderPatientAction = createDescriptorForOrderPatientAction();
  /*package*/ final ConceptDescriptor myConceptPassiveWaitAction = createDescriptorForPassiveWaitAction();
  /*package*/ final ConceptDescriptor myConceptPassiveWaitUntil = createDescriptorForPassiveWaitUntil();
  /*package*/ final ConceptDescriptor myConceptPatientInstance = createDescriptorForPatientInstance();
  /*package*/ final ConceptDescriptor myConceptPlaceInstance = createDescriptorForPlaceInstance();
  /*package*/ final ConceptDescriptor myConceptPlaceInstanceCollection = createDescriptorForPlaceInstanceCollection();
  /*package*/ final ConceptDescriptor myConceptPlaceInstanceFromSignal = createDescriptorForPlaceInstanceFromSignal();
  /*package*/ final ConceptDescriptor myConceptPlaceInstanceReference = createDescriptorForPlaceInstanceReference();
  /*package*/ final ConceptDescriptor myConceptPossibilityCondition = createDescriptorForPossibilityCondition();
  /*package*/ final ConceptDescriptor myConceptRelationship = createDescriptorForRelationship();
  /*package*/ final ConceptDescriptor myConceptRemoveRelationshipAction = createDescriptorForRemoveRelationshipAction();
  /*package*/ final ConceptDescriptor myConceptRepastParam = createDescriptorForRepastParam();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionCondition = createDescriptorForRoomSelectionCondition();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionRule = createDescriptorForRoomSelectionRule();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionStrategy = createDescriptorForRoomSelectionStrategy();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionStrategyLine = createDescriptorForRoomSelectionStrategyLine();
  /*package*/ final ConceptDescriptor myConceptRoomTypeCondition = createDescriptorForRoomTypeCondition();
  /*package*/ final ConceptDescriptor myConceptRoomTypeIsAvailableCondition = createDescriptorForRoomTypeIsAvailableCondition();
  /*package*/ final ConceptDescriptor myConceptRoomTypeReference = createDescriptorForRoomTypeReference();
  /*package*/ final ConceptDescriptor myConceptSelectClosestRoom = createDescriptorForSelectClosestRoom();
  /*package*/ final ConceptDescriptor myConceptSelectFirstSignal = createDescriptorForSelectFirstSignal();
  /*package*/ final ConceptDescriptor myConceptSelectNotRelationshipDataSignal = createDescriptorForSelectNotRelationshipDataSignal();
  /*package*/ final ConceptDescriptor myConceptSelectRandomSignal = createDescriptorForSelectRandomSignal();
  /*package*/ final ConceptDescriptor myConceptSelectRelationshipDataSignal = createDescriptorForSelectRelationshipDataSignal();
  /*package*/ final ConceptDescriptor myConceptSelectRoomByCapacity = createDescriptorForSelectRoomByCapacity();
  /*package*/ final ConceptDescriptor myConceptSelectRoomByRelationshipToOccupier = createDescriptorForSelectRoomByRelationshipToOccupier();
  /*package*/ final ConceptDescriptor myConceptSelectRoomWithNoAgentsOfType = createDescriptorForSelectRoomWithNoAgentsOfType();
  /*package*/ final ConceptDescriptor myConceptSelfInstance = createDescriptorForSelfInstance();
  /*package*/ final ConceptDescriptor myConceptSendSignalAction = createDescriptorForSendSignalAction();
  /*package*/ final ConceptDescriptor myConceptSignal = createDescriptorForSignal();
  /*package*/ final ConceptDescriptor myConceptSignalDefinition = createDescriptorForSignalDefinition();
  /*package*/ final ConceptDescriptor myConceptSignalInitReference = createDescriptorForSignalInitReference();
  /*package*/ final ConceptDescriptor myConceptSignalReference = createDescriptorForSignalReference();
  /*package*/ final ConceptDescriptor myConceptSignalSelectionRule = createDescriptorForSignalSelectionRule();
  /*package*/ final ConceptDescriptor myConceptSignalSelectionRuleLine = createDescriptorForSignalSelectionRuleLine();
  /*package*/ final ConceptDescriptor myConceptSignalTrigger = createDescriptorForSignalTrigger();
  /*package*/ final ConceptDescriptor myConceptSpaceAtCondition = createDescriptorForSpaceAtCondition();
  /*package*/ final ConceptDescriptor myConceptStayAction = createDescriptorForStayAction();
  /*package*/ final ConceptDescriptor myConceptStayForConditionAction = createDescriptorForStayForConditionAction();
  /*package*/ final ConceptDescriptor myConceptStayForTimeAction = createDescriptorForStayForTimeAction();
  /*package*/ final ConceptDescriptor myConceptStopOrder = createDescriptorForStopOrder();
  /*package*/ final ConceptDescriptor myConceptTimeDistributionLine = createDescriptorForTimeDistributionLine();
  /*package*/ final ConceptDescriptor myConceptTimeDistributionTable = createDescriptorForTimeDistributionTable();
  /*package*/ final ConceptDescriptor myConceptUpdateAttributeAction = createDescriptorForUpdateAttributeAction();
  /*package*/ final ConceptDescriptor myConceptUseResourceAction = createDescriptorForUseResourceAction();
  /*package*/ final EnumerationDescriptor myEnumerationBaseType = new EnumerationDescriptor_BaseType();
  /*package*/ final EnumerationDescriptor myEnumerationColour = new EnumerationDescriptor_Colour();
  /*package*/ final EnumerationDescriptor myEnumerationInfectionStateType = new EnumerationDescriptor_InfectionStateType();
  /*package*/ final EnumerationDescriptor myEnumerationJudgeOperator = new EnumerationDescriptor_JudgeOperator();
  /*package*/ final EnumerationDescriptor myEnumerationModifyOperator = new EnumerationDescriptor_ModifyOperator();
  /*package*/ final EnumerationDescriptor myEnumerationPatientOutcomes = new EnumerationDescriptor_PatientOutcomes();
  /*package*/ final EnumerationDescriptor myEnumerationSeverityScore = new EnumerationDescriptor_SeverityScore();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeEasyFloatNumber = new ConstrainedStringDatatypeDescriptorImpl(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL, "EasyFloatNumber", "r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7454555096516561340", "[0-9]+(.[0-9]+)?");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.extendedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptActor, myConceptActorReference, myConceptActorTypeSignal, myConceptAdmitAction, myConceptAgentGenerator, myConceptAgentGeneratorLine, myConceptAggregateAttributeMonitor, myConceptAndCondition, myConceptAttribute, myConceptAttributeCondition, myConceptAttributeDistributionLine, myConceptAttributeDistributionTable, myConceptAttributeExpressionReference, myConceptAttributeMonitor, myConceptAttributeReference, myConceptBehaviour, myConceptBehaviourElement, myConceptBehaviourElementReference, myConceptBehaviourSequence, myConceptBinaryCondition, myConceptChoice, myConceptCompositeOrder, myConceptCondition, myConceptConsequenceElement, myConceptConsequenceInStep, myConceptDataInstanceMap, myConceptDataMap, myConceptDescription, myConceptDirectSignal, myConceptDischargeAction, myConceptExpressionWrapper, myConceptFollowOrder, myConceptHumanInstance, myConceptHumanInstanceFromSignal, myConceptIAmAtCondition, myConceptInfectionState, myConceptIsExactlyOperator, myConceptIsLessThanOperator, myConceptKernelFCondition, myConceptMessageSelectionStrategy, myConceptMoveAction, myConceptMoveOrder, myConceptNewPatientSignal, myConceptObjectInstance, myConceptOccupiableAvailabilityCondition, myConceptOccupiableInstance, myConceptOccupyAction, myConceptOccupyOrder, myConceptOperator, myConceptOrder, myConceptOrderPatientAction, myConceptPassiveWaitAction, myConceptPassiveWaitUntil, myConceptPatientInstance, myConceptPlaceInstance, myConceptPlaceInstanceCollection, myConceptPlaceInstanceFromSignal, myConceptPlaceInstanceReference, myConceptPossibilityCondition, myConceptRelationship, myConceptRemoveRelationshipAction, myConceptRepastParam, myConceptRoomSelectionCondition, myConceptRoomSelectionRule, myConceptRoomSelectionStrategy, myConceptRoomSelectionStrategyLine, myConceptRoomTypeCondition, myConceptRoomTypeIsAvailableCondition, myConceptRoomTypeReference, myConceptSelectClosestRoom, myConceptSelectFirstSignal, myConceptSelectNotRelationshipDataSignal, myConceptSelectRandomSignal, myConceptSelectRelationshipDataSignal, myConceptSelectRoomByCapacity, myConceptSelectRoomByRelationshipToOccupier, myConceptSelectRoomWithNoAgentsOfType, myConceptSelfInstance, myConceptSendSignalAction, myConceptSignal, myConceptSignalDefinition, myConceptSignalInitReference, myConceptSignalReference, myConceptSignalSelectionRule, myConceptSignalSelectionRuleLine, myConceptSignalTrigger, myConceptSpaceAtCondition, myConceptStayAction, myConceptStayForConditionAction, myConceptStayForTimeAction, myConceptStopOrder, myConceptTimeDistributionLine, myConceptTimeDistributionTable, myConceptUpdateAttributeAction, myConceptUseResourceAction);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Actor:
        return myConceptActor;
      case LanguageConceptSwitch.ActorReference:
        return myConceptActorReference;
      case LanguageConceptSwitch.ActorTypeSignal:
        return myConceptActorTypeSignal;
      case LanguageConceptSwitch.AdmitAction:
        return myConceptAdmitAction;
      case LanguageConceptSwitch.AgentGenerator:
        return myConceptAgentGenerator;
      case LanguageConceptSwitch.AgentGeneratorLine:
        return myConceptAgentGeneratorLine;
      case LanguageConceptSwitch.AggregateAttributeMonitor:
        return myConceptAggregateAttributeMonitor;
      case LanguageConceptSwitch.AndCondition:
        return myConceptAndCondition;
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.AttributeCondition:
        return myConceptAttributeCondition;
      case LanguageConceptSwitch.AttributeDistributionLine:
        return myConceptAttributeDistributionLine;
      case LanguageConceptSwitch.AttributeDistributionTable:
        return myConceptAttributeDistributionTable;
      case LanguageConceptSwitch.AttributeExpressionReference:
        return myConceptAttributeExpressionReference;
      case LanguageConceptSwitch.AttributeMonitor:
        return myConceptAttributeMonitor;
      case LanguageConceptSwitch.AttributeReference:
        return myConceptAttributeReference;
      case LanguageConceptSwitch.Behaviour:
        return myConceptBehaviour;
      case LanguageConceptSwitch.BehaviourElement:
        return myConceptBehaviourElement;
      case LanguageConceptSwitch.BehaviourElementReference:
        return myConceptBehaviourElementReference;
      case LanguageConceptSwitch.BehaviourSequence:
        return myConceptBehaviourSequence;
      case LanguageConceptSwitch.BinaryCondition:
        return myConceptBinaryCondition;
      case LanguageConceptSwitch.Choice:
        return myConceptChoice;
      case LanguageConceptSwitch.CompositeOrder:
        return myConceptCompositeOrder;
      case LanguageConceptSwitch.Condition:
        return myConceptCondition;
      case LanguageConceptSwitch.ConsequenceElement:
        return myConceptConsequenceElement;
      case LanguageConceptSwitch.ConsequenceInStep:
        return myConceptConsequenceInStep;
      case LanguageConceptSwitch.DataInstanceMap:
        return myConceptDataInstanceMap;
      case LanguageConceptSwitch.DataMap:
        return myConceptDataMap;
      case LanguageConceptSwitch.Description:
        return myConceptDescription;
      case LanguageConceptSwitch.DirectSignal:
        return myConceptDirectSignal;
      case LanguageConceptSwitch.DischargeAction:
        return myConceptDischargeAction;
      case LanguageConceptSwitch.ExpressionWrapper:
        return myConceptExpressionWrapper;
      case LanguageConceptSwitch.FollowOrder:
        return myConceptFollowOrder;
      case LanguageConceptSwitch.HumanInstance:
        return myConceptHumanInstance;
      case LanguageConceptSwitch.HumanInstanceFromSignal:
        return myConceptHumanInstanceFromSignal;
      case LanguageConceptSwitch.IAmAtCondition:
        return myConceptIAmAtCondition;
      case LanguageConceptSwitch.InfectionState:
        return myConceptInfectionState;
      case LanguageConceptSwitch.IsExactlyOperator:
        return myConceptIsExactlyOperator;
      case LanguageConceptSwitch.IsLessThanOperator:
        return myConceptIsLessThanOperator;
      case LanguageConceptSwitch.KernelFCondition:
        return myConceptKernelFCondition;
      case LanguageConceptSwitch.MessageSelectionStrategy:
        return myConceptMessageSelectionStrategy;
      case LanguageConceptSwitch.MoveAction:
        return myConceptMoveAction;
      case LanguageConceptSwitch.MoveOrder:
        return myConceptMoveOrder;
      case LanguageConceptSwitch.NewPatientSignal:
        return myConceptNewPatientSignal;
      case LanguageConceptSwitch.ObjectInstance:
        return myConceptObjectInstance;
      case LanguageConceptSwitch.OccupiableAvailabilityCondition:
        return myConceptOccupiableAvailabilityCondition;
      case LanguageConceptSwitch.OccupiableInstance:
        return myConceptOccupiableInstance;
      case LanguageConceptSwitch.OccupyAction:
        return myConceptOccupyAction;
      case LanguageConceptSwitch.OccupyOrder:
        return myConceptOccupyOrder;
      case LanguageConceptSwitch.Operator:
        return myConceptOperator;
      case LanguageConceptSwitch.Order:
        return myConceptOrder;
      case LanguageConceptSwitch.OrderPatientAction:
        return myConceptOrderPatientAction;
      case LanguageConceptSwitch.PassiveWaitAction:
        return myConceptPassiveWaitAction;
      case LanguageConceptSwitch.PassiveWaitUntil:
        return myConceptPassiveWaitUntil;
      case LanguageConceptSwitch.PatientInstance:
        return myConceptPatientInstance;
      case LanguageConceptSwitch.PlaceInstance:
        return myConceptPlaceInstance;
      case LanguageConceptSwitch.PlaceInstanceCollection:
        return myConceptPlaceInstanceCollection;
      case LanguageConceptSwitch.PlaceInstanceFromSignal:
        return myConceptPlaceInstanceFromSignal;
      case LanguageConceptSwitch.PlaceInstanceReference:
        return myConceptPlaceInstanceReference;
      case LanguageConceptSwitch.PossibilityCondition:
        return myConceptPossibilityCondition;
      case LanguageConceptSwitch.Relationship:
        return myConceptRelationship;
      case LanguageConceptSwitch.RemoveRelationshipAction:
        return myConceptRemoveRelationshipAction;
      case LanguageConceptSwitch.RepastParam:
        return myConceptRepastParam;
      case LanguageConceptSwitch.RoomSelectionCondition:
        return myConceptRoomSelectionCondition;
      case LanguageConceptSwitch.RoomSelectionRule:
        return myConceptRoomSelectionRule;
      case LanguageConceptSwitch.RoomSelectionStrategy:
        return myConceptRoomSelectionStrategy;
      case LanguageConceptSwitch.RoomSelectionStrategyLine:
        return myConceptRoomSelectionStrategyLine;
      case LanguageConceptSwitch.RoomTypeCondition:
        return myConceptRoomTypeCondition;
      case LanguageConceptSwitch.RoomTypeIsAvailableCondition:
        return myConceptRoomTypeIsAvailableCondition;
      case LanguageConceptSwitch.RoomTypeReference:
        return myConceptRoomTypeReference;
      case LanguageConceptSwitch.SelectClosestRoom:
        return myConceptSelectClosestRoom;
      case LanguageConceptSwitch.SelectFirstSignal:
        return myConceptSelectFirstSignal;
      case LanguageConceptSwitch.SelectNotRelationshipDataSignal:
        return myConceptSelectNotRelationshipDataSignal;
      case LanguageConceptSwitch.SelectRandomSignal:
        return myConceptSelectRandomSignal;
      case LanguageConceptSwitch.SelectRelationshipDataSignal:
        return myConceptSelectRelationshipDataSignal;
      case LanguageConceptSwitch.SelectRoomByCapacity:
        return myConceptSelectRoomByCapacity;
      case LanguageConceptSwitch.SelectRoomByRelationshipToOccupier:
        return myConceptSelectRoomByRelationshipToOccupier;
      case LanguageConceptSwitch.SelectRoomWithNoAgentsOfType:
        return myConceptSelectRoomWithNoAgentsOfType;
      case LanguageConceptSwitch.SelfInstance:
        return myConceptSelfInstance;
      case LanguageConceptSwitch.SendSignalAction:
        return myConceptSendSignalAction;
      case LanguageConceptSwitch.Signal:
        return myConceptSignal;
      case LanguageConceptSwitch.SignalDefinition:
        return myConceptSignalDefinition;
      case LanguageConceptSwitch.SignalInitReference:
        return myConceptSignalInitReference;
      case LanguageConceptSwitch.SignalReference:
        return myConceptSignalReference;
      case LanguageConceptSwitch.SignalSelectionRule:
        return myConceptSignalSelectionRule;
      case LanguageConceptSwitch.SignalSelectionRuleLine:
        return myConceptSignalSelectionRuleLine;
      case LanguageConceptSwitch.SignalTrigger:
        return myConceptSignalTrigger;
      case LanguageConceptSwitch.SpaceAtCondition:
        return myConceptSpaceAtCondition;
      case LanguageConceptSwitch.StayAction:
        return myConceptStayAction;
      case LanguageConceptSwitch.StayForConditionAction:
        return myConceptStayForConditionAction;
      case LanguageConceptSwitch.StayForTimeAction:
        return myConceptStayForTimeAction;
      case LanguageConceptSwitch.StopOrder:
        return myConceptStopOrder;
      case LanguageConceptSwitch.TimeDistributionLine:
        return myConceptTimeDistributionLine;
      case LanguageConceptSwitch.TimeDistributionTable:
        return myConceptTimeDistributionTable;
      case LanguageConceptSwitch.UpdateAttributeAction:
        return myConceptUpdateAttributeAction;
      case LanguageConceptSwitch.UseResourceAction:
        return myConceptUseResourceAction;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationBaseType, myEnumerationColour, myEnumerationInfectionStateType, myEnumerationJudgeOperator, myEnumerationModifyOperator, myEnumerationPatientOutcomes, myEnumerationSeverityScore, myCSDatatypeEasyFloatNumber);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForActor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Actor", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce2f6271L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3838812034270454385");
    b.version(2);
    b.property("patientCapacity", 0x757b60e1226eda1dL).type(PrimitiveTypeId.INTEGER).origin("8465466444634577437").done();
    b.associate("superType", 0x35463334ce306ba8L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce2f6271L).optional(true).origin("3838812034270522280").done();
    b.aggregate("attributes", 0x257e995deb85de00L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125516L).optional(true).ordered(true).multiple(true).origin("2701765455131303424").done();
    b.aggregate("behaviours", 0x270efea19372e41eL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce306b7aL).optional(true).ordered(true).multiple(true).origin("2814466787070108702").done();
    b.aggregate("signalselectionstrategy", 0x78ac3095f38bfaL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379c3L).optional(true).ordered(true).multiple(false).origin("33966321879452666").done();
    b.aggregate("roomSelectionStrategy", 0x6e3a4f6d5ccaa31cL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccaa76fL).optional(true).ordered(true).multiple(false).origin("7942748223948104476").done();
    b.aggregate("attributeMonitors", 0x7117c8e60855dcc9L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7117c8e6083740b4L).optional(true).ordered(true).multiple(true).origin("8149202941058079945").done();
    b.aggregate("aggregateAttributeMonitors", 0x19352e209fb54c51L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6ca3e29db4287123L).optional(true).ordered(true).multiple(true).origin("1816408742367153233").done();
    b.aggregate("isIdleBehaviour", 0x3dab4295aef20062L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce306b7aL).optional(true).ordered(true).multiple(false).origin("4443718667983781986").done();
    b.alias("actor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "ActorReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd0118aabL);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/513408552829815467");
    b.version(2);
    b.associate("actor", 0x71ffe5bd0118aacL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce2f6271L).optional(false).origin("513408552829815468").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActorTypeSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "ActorTypeSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x139a759561627f4L);
    b.class_(false, false, true);
    b.super_("AgentLanguage.structure.Signal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd010732aL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/88285669848655860");
    b.version(2);
    b.alias("Signal to a set of actor types");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAdmitAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AdmitAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x139a75955f0be54L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/88285669846203988");
    b.version(2);
    b.aggregate("targetPatient", 0x139a75955f0be57L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a4L).optional(false).ordered(true).multiple(false).origin("88285669846203991").done();
    b.aggregate("targetBay", 0x22d5ede83b22e7cbL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L).optional(false).ordered(true).multiple(false).origin("2510173949009258443").done();
    b.alias("admit");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAgentGenerator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AgentGenerator", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x637eade0e62ce2b8L);
    b.class_(false, false, true);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7169358838266389176");
    b.version(2);
    b.aggregate("AgentGeneratorLines", 0x27ebd2392beaa3d1L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x27ebd2392beaa324L).optional(true).ordered(true).multiple(true).origin("2876623929997960145").done();
    b.aggregate("AgentType", 0xaabf015be70c170L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd0118aabL).optional(false).ordered(true).multiple(false).origin("768972137576841584").done();
    b.aggregate("SpawnAt", 0xaabf015bf63bb64L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(false).ordered(true).multiple(false).origin("768972137592765284").done();
    b.aggregate("ArrivalMessage", 0x7117c8e6069c8681L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f0c93L).optional(true).ordered(true).multiple(false).origin("8149202941029156481").done();
    b.aggregate("AttributeMaps", 0x296f74efb4abbea0L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb466f407L).optional(true).ordered(true).multiple(true).origin("2985733650847088288").done();
    b.alias("Agent Generator");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAgentGeneratorLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AgentGeneratorLine", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x27ebd2392beaa324L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/2876623929997959972");
    b.version(2);
    b.property("Time", 0x27ebd2392beaa32eL).type(PrimitiveTypeId.INTEGER).origin("2876623929997959982").done();
    b.property("NumAgentsInHour", 0x27ebd2392beaa330L).type(PrimitiveTypeId.INTEGER).origin("2876623929997959984").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAggregateAttributeMonitor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AggregateAttributeMonitor", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6ca3e29db4287123L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.AttributeMonitor", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7117c8e6083740b4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7828349744260346147");
    b.version(2);
    b.aggregate("attributeMonitorPossibleValues", 0x6ca3e29db4287150L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(true).origin("7828349744260346192").done();
    b.alias("aggregate attribute monitor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AndCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x142c08a9440cdabL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.BinaryCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x142c08a9440bcbdL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/90846643926125995");
    b.version(2);
    b.alias("and");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Attribute", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125516L);
    b.class_(false, false, false);
    b.parent(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a179034L);
    b.parent(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1ab0b7cL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093659899158");
    b.version(2);
    b.aggregate("value", 0x2574566375976ad5L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("2698877061876378325").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AttributeCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125515L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093659899157");
    b.version(2);
    b.property("operator", 0x3c282c112f12556fL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125553L)).origin("4334763093659899247").done();
    b.associate("attrRef", 0x296f74efb74adab6L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125516L).optional(false).origin("2985733650891070134").done();
    b.associate("actorRef", 0x296f74efb84ff07dL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce2f6271L).optional(false).origin("2985733650908180605").done();
    b.aggregate("right", 0x6773e65d46626c39L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("7454555096515505209").done();
    b.alias("compare attributes");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeDistributionLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AttributeDistributionLine", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb466f367L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/2985733650842579815");
    b.version(2);
    b.property("probabilityDistribution", 0x296f74efb466f3a2L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("2985733650842579874").done();
    b.aggregate("attributeValue", 0x296f74efb466f49aL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("2985733650842580122").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeDistributionTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AttributeDistributionTable", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb466f407L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/2985733650842579975");
    b.version(2);
    b.property("attributeName", 0x296f74efb4e82777L).type(PrimitiveTypeId.STRING).origin("2985733650851047287").done();
    b.aggregate("lines", 0x296f74efb466f435L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb466f367L).optional(true).ordered(true).multiple(true).origin("2985733650842580021").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeExpressionReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AttributeExpressionReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d466277fcL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7454555096515508220");
    b.version(2);
    b.associate("attribute", 0x6773e65d4662786eL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125516L).optional(false).origin("7454555096515508334").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeMonitor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AttributeMonitor", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7117c8e6083740b4L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8149202941056073908");
    b.version(2);
    b.associate("attribute", 0x7117c8e6083740beL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125516L).optional(false).origin("8149202941056073918").done();
    b.aggregate("possibleValues", 0x7117c8e6083740c6L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(true).origin("8149202941056073926").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "AttributeReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125519L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2b547b5bcf93594L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093659899161");
    b.version(2);
    b.associate("attribute", 0x3c282c112f12551aL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125516L).optional(false).origin("4334763093659899162").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBehaviour() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.class_(false, true, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3838812034270528839");
    b.version(2);
    b.aggregate("description", 0x7ba98c3ed53618a0L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7ba98c3ed5361882L).optional(true).ordered(true).multiple(false).origin("8910807539222190240").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBehaviourElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "BehaviourElement", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce306b7aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3838812034270522234");
    b.version(2);
    b.aggregate("signal", 0x71ffe5bd0133e89L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x2faec239055220c9L).optional(true).ordered(true).multiple(false).origin("513408552829927049").done();
    b.aggregate("behaviour", 0x35463334ce308543L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308546L).optional(false).ordered(true).multiple(false).origin("3838812034270528835").done();
    b.aggregate("consequence", 0x50f1fbdc6defea4eL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x50f1fbdc6defea52L).optional(true).ordered(true).multiple(false).origin("5832719916577319502").done();
    b.alias("behaviour element");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBehaviourElementReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "BehaviourElementReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ef3be0L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4530954867907181536");
    b.version(2);
    b.associate("behaviourElement", 0x3ee12f7242ef3be1L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce306b7aL).optional(false).origin("4530954867907181537").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBehaviourSequence() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "BehaviourSequence", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308546L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3838812034270528838");
    b.version(2);
    b.aggregate("steps", 0x35463334ce308548L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L).optional(false).ordered(true).multiple(true).origin("3838812034270528840").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "BinaryCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x142c08a9440bcbdL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Condition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/90846643926121661");
    b.version(2);
    b.aggregate("left", 0x142c08a9440bcd9L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L).optional(false).ordered(true).multiple(false).origin("90846643926121689").done();
    b.aggregate("right", 0x142c08a9440bcdbL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L).optional(false).ordered(true).multiple(false).origin("90846643926121691").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChoice() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Choice", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce30854aL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3838812034270528842");
    b.version(2);
    b.aggregate("condition", 0x35463334ce30854dL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("3838812034270528845").done();
    b.aggregate("if_case", 0x35463334ce30854bL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308546L).optional(false).ordered(true).multiple(false).origin("3838812034270528843").done();
    b.aggregate("else_case", 0x35463334ce308550L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308546L).optional(true).ordered(true).multiple(false).origin("3838812034270528848").done();
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompositeOrder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "CompositeOrder", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x314f6777a655b3faL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Order", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3553172394608014330");
    b.version(2);
    b.aggregate("orderLeft", 0x314f6777a655b416L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL).optional(false).ordered(true).multiple(false).origin("3553172394608014358").done();
    b.aggregate("orderRight", 0x314f6777a655b418L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL).optional(false).ordered(true).multiple(false).origin("3553172394608014360").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Condition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L);
    b.class_(false, true, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4530954867906952002");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConsequenceElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "ConsequenceElement", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x50f1fbdc6defea52L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/5832719916577319506");
    b.version(2);
    b.aggregate("consequences", 0x50f1fbdc6defecc6L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x50f1fbdc6defec6aL).optional(false).ordered(true).multiple(true).origin("5832719916577320134").done();
    b.alias("consequence");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConsequenceInStep() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "ConsequenceInStep", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0xbc00e5badf6b520L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/846692516869092640");
    b.version(2);
    b.aggregate("consequence", 0xbc00e5badf6b521L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x50f1fbdc6defec6aL).optional(false).ordered(true).multiple(false).origin("846692516869092641").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataInstanceMap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "DataInstanceMap", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x45056e1fe037ad68L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4973502446685367656");
    b.version(2);
    b.associate("dataLine", 0x50f1fbdc6daee00dL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f0c96L).optional(false).origin("5832719916573057037").done();
    b.aggregate("objectInstance", 0x45056e1fe037ad6bL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L).optional(false).ordered(true).multiple(false).origin("4973502446685367659").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataMap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "DataMap", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f0c96L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4211260315489209494");
    b.version(2);
    b.property("valueType", 0x3a7166f1d9709f4eL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d9709f40L)).origin("4211260315489312590").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDescription() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Description", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7ba98c3ed5361882L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8910807539222190210");
    b.version(2);
    b.property("description", 0x7ba98c3ed5361883L).type(PrimitiveTypeId.STRING).origin("8910807539222190211").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDirectSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "DirectSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x139a759560ba2b4L);
    b.class_(false, false, true);
    b.super_("AgentLanguage.structure.Signal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd010732aL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/88285669847966388");
    b.version(2);
    b.alias("direct signal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDischargeAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "DischargeAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x139a75955df55b4L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/88285669845063092");
    b.version(2);
    b.aggregate("targetPatient", 0x139a75955df55b7L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a4L).optional(false).ordered(true).multiple(false).origin("88285669845063095").done();
    b.alias("discharge");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpressionWrapper() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "ExpressionWrapper", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d465e21e9L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7454555096515224041");
    b.version(2);
    b.property("repastVariableName", 0x33299c1cb9c839daL).type(PrimitiveTypeId.STRING).origin("3686649417169385946").done();
    b.property("value", 0x33299c1cba4a21f8L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("3686649417177899512").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFollowOrder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "FollowOrder", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483beL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Order", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493510951870");
    b.version(2);
    b.aggregate("targetObject", 0x7606d63a99b483c4L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a2L).optional(false).ordered(true).multiple(false).origin("8504720493510951876").done();
    b.alias("follow");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHumanInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "HumanInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a2L);
    b.class_(false, true, false);
    b.super_("AgentLanguage.structure.ObjectInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493511205794");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHumanInstanceFromSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "HumanInstanceFromSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99baabefL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.HumanInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a2L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493511355375");
    b.version(2);
    b.property("data", 0x7606d63a99baabf0L).type(PrimitiveTypeId.STRING).origin("8504720493511355376").done();
    b.alias("human instance from Signal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIAmAtCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "IAmAtCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x334005c7659a27beL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Condition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3692958048405039038");
    b.version(2);
    b.aggregate("target", 0x334005c7659a27f5L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L).optional(false).ordered(true).multiple(false).origin("3692958048405039093").done();
    b.alias("I am at location condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfectionState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "InfectionState", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x4936c0ffdc6342bL);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/329726013666112555");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsExactlyOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "IsExactlyOperator", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3bf86d07f26980c5L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Operator", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3bf86d07f26980bbL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4321323723361190085");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIsLessThanOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "IsLessThanOperator", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3bf86d07f26980e2L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Operator", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3bf86d07f26980bbL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4321323723361190114");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForKernelFCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "KernelFCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x142c08a93d880afL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Condition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/90846643919290543");
    b.version(2);
    b.aggregate("expression", 0x142c08a93d880b9L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("90846643919290553").done();
    b.alias("kernelF expression");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMessageSelectionStrategy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "MessageSelectionStrategy", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379c3L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321879448003");
    b.version(2);
    b.aggregate("rules", 0x78ac3095f38b97L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379d6L).optional(true).ordered(true).multiple(true).origin("33966321879452567").done();
    b.alias("message selection strategy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMoveAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "MoveAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308554L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3838812034270528852");
    b.version(2);
    b.aggregate("targetObject", 0x71ffe5bd021cc62L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L).optional(false).ordered(true).multiple(false).origin("513408552830880866").done();
    b.alias("go to");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMoveOrder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "MoveOrder", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bdL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Order", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493510951869");
    b.version(2);
    b.aggregate("targetObject", 0x7606d63a99b483c2L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L).optional(false).ordered(true).multiple(false).origin("8504720493510951874").done();
    b.alias("go to");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewPatientSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "NewPatientSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x2faec239055220ccL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.SignalTrigger", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x2faec239055220c9L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3435897115888459980");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObjectInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "ObjectInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093659899312");
    b.version(2);
    b.property("type", 0x3c282c112f1255b1L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d9709f40L)).origin("4334763093659899313").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOccupiableAvailabilityCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "OccupiableAvailabilityCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x4ab0a0c760d9b8f3L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Condition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/5381978332891560179");
    b.version(2);
    b.property("minCapacity", 0x4ab0a0c760d9e3cdL).type(PrimitiveTypeId.INTEGER).origin("5381978332891571149").done();
    b.aggregate("targetRoom", 0x4ab0a0c760d9b90fL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(false).ordered(true).multiple(false).origin("5381978332891560207").done();
    b.aggregate("targetObject", 0x4ab0a0c760d9b92aL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x757b60e121ce55abL).optional(false).ordered(true).multiple(false).origin("5381978332891560234").done();
    b.alias("Occupiable type is available condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOccupiableInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "OccupiableInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x757b60e121ce55abL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.PlaceInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8465466444624057771");
    b.version(2);
    b.associate("occupiable", 0x3111466f1fe9fcb6L).target(0x1a0150acdda54129L, 0x824e01dce96fdea4L, 0x3111466f1f9fe043L).optional(false).origin("3535684625553292470").done();
    b.alias("occupiable");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOccupyAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "OccupyAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x757b60e121ce5041L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8465466444624056385");
    b.version(2);
    b.aggregate("targetObject", 0x757b60e121ce5044L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x757b60e121ce55abL).optional(false).ordered(true).multiple(false).origin("8465466444624056388").done();
    b.alias("take");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOccupyOrder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "OccupyOrder", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x139a75957e06520L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Order", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/88285669878687008");
    b.version(2);
    b.aggregate("targetOccupiable", 0x139a75957e06521L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x757b60e121ce55abL).optional(false).ordered(true).multiple(false).origin("88285669878687009").done();
    b.alias("occupy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Operator", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3bf86d07f26980bbL);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4321323723361190075");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Order", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL);
    b.class_(false, true, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493510951868");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrderPatientAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "OrderPatientAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bbL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493510951867");
    b.version(2);
    b.aggregate("targetPatient", 0x7606d63a99b4841fL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a4L).optional(false).ordered(true).multiple(false).origin("8504720493510951967").done();
    b.aggregate("orderContent", 0x7606d63a99b483c6L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL).optional(false).ordered(true).multiple(false).origin("8504720493510951878").done();
    b.alias("ask patient");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPassiveWaitAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PassiveWaitAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb560f155L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.StayAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f188fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/2985733650858963285");
    b.version(2);
    b.associate("timeDistributionTable", 0x296f74efb5611228L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb5610e89L).optional(false).origin("2985733650858971688").done();
    b.alias("stay for time distribution");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPassiveWaitUntil() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PassiveWaitUntil", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3111466f1f9f64beL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.PassiveWaitAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb560f155L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3535684625548403902");
    b.version(2);
    b.aggregate("condition", 0x3111466f1f9f8308L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L).optional(false).ordered(true).multiple(false).origin("3535684625548411656").done();
    b.alias("passively wait until condition is met");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PatientInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a4L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.HumanInstanceFromSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99baabefL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493511205796");
    b.version(2);
    b.alias("patient");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlaceInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PlaceInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a3L);
    b.class_(false, true, false);
    b.super_("AgentLanguage.structure.ObjectInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493511205795");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlaceInstanceCollection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PlaceInstanceCollection", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0xa159abb4e9e65L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.PlaceInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/2838504078745189");
    b.version(2);
    b.aggregate("place", 0xa159abb4e9e66L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f27bdc3L).optional(false).ordered(true).multiple(false).origin("2838504078745190").done();
    b.alias("the");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlaceInstanceFromSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PlaceInstanceFromSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b3L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.PlaceInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093659899315");
    b.version(2);
    b.property("data", 0x3c282c112f1255b6L).type(PrimitiveTypeId.STRING).origin("4334763093659899318").done();
    b.alias("place instance from Signal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlaceInstanceReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PlaceInstanceReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f27bdc3L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093661302211");
    b.version(2);
    b.associate("spaceInstance", 0x3c282c112f27bdc4L).target(0x1a0150acdda54129L, 0x824e01dce96fdea4L, 0x3c282c112f249045L).optional(false).origin("4334763093661302212").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPossibilityCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "PossibilityCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f12564bL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093659899467");
    b.version(2);
    b.aggregate("possibility", 0x6773e65d4667629aL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d465e21e9L).optional(false).ordered(true).multiple(false).origin("7454555096515830426").done();
    b.alias("possibility");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRelationship() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Relationship", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3096379b5dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321883913053");
    b.version(2);
    b.alias("relationship");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRemoveRelationshipAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RemoveRelationshipAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0xaabf015bded4881L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/768972137568225409");
    b.version(2);
    b.property("relationshipName", 0x78ac3095e3fd89L).type(PrimitiveTypeId.STRING).origin("33966321878433161").done();
    b.aggregate("target", 0xaabf015bfc2e13bL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a2L).optional(false).ordered(true).multiple(false).origin("768972137599000891").done();
    b.alias("removeRelationship");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRepastParam() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RepastParam", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x2f4b56ecb8075c8eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3407913117735672974");
    b.version(2);
    b.associate("parameterValue", 0x33299c1cb94fad50L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d465e21e9L).optional(false).origin("3686649417161485648").done();
    b.alias("Repast Parameter");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RoomSelectionCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x334005c7663c2373L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3692958048415654771");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RoomSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccab90aL);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7942748223948110090");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionStrategy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RoomSelectionStrategy", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccaa76fL);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7942748223948105583");
    b.version(2);
    b.aggregate("rules", 0x6e3a4f6d5ccaae25L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccaaf60L).optional(true).ordered(true).multiple(true).origin("7942748223948107301").done();
    b.alias("room selection strategy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionStrategyLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RoomSelectionStrategyLine", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccaaf60L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7942748223948107616");
    b.version(2);
    b.aggregate("condition", 0x6e3a4f6d5ccab6a5L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(true).ordered(true).multiple(false).origin("7942748223948109477").done();
    b.aggregate("rule", 0x6e3a4f6d5ccab7d7L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccab90aL).optional(false).ordered(true).multiple(false).origin("7942748223948109783").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomTypeCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RoomTypeCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x334005c7663c2585L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.RoomSelectionCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x334005c7663c2373L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3692958048415655301");
    b.version(2);
    b.aggregate("roomType", 0x334005c7663c2591L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(false).ordered(true).multiple(false).origin("3692958048415655313").done();
    b.alias("Check room type");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomTypeIsAvailableCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RoomTypeIsAvailableCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x20b46d6281e5db6L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Condition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/147289298429697462");
    b.version(2);
    b.aggregate("targetRoomType", 0x20b46d6281e5de4L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(false).ordered(true).multiple(false).origin("147289298429697508").done();
    b.alias("Room type is available condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomTypeReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "RoomTypeReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.PlaceInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/6750846609956093098");
    b.version(2);
    b.associate("roomType", 0x5dafd3396799c110L).target(0x1a0150acdda54129L, 0x824e01dce96fdea4L, 0x5dafd33966e8fe19L).optional(false).origin("6750846609956389136").done();
    b.alias("a");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectClosestRoom() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectClosestRoom", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5de9fe40L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.RoomSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccab90aL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7942748223966936640");
    b.version(2);
    b.alias("select closest room");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectFirstSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectFirstSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f38ad7L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.SignalSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379eeL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321879452375");
    b.version(2);
    b.alias("select first signal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectNotRelationshipDataSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectNotRelationshipDataSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f78dbfL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.SignalSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379eeL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321879715263");
    b.version(2);
    b.property("relationshipName", 0x78ac3095f7dceeL).type(PrimitiveTypeId.STRING).origin("33966321879735534").done();
    b.property("dataName", 0x78ac3095f7dcf0L).type(PrimitiveTypeId.STRING).origin("33966321879735536").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectRandomSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectRandomSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f38affL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.SignalSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379eeL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321879452415");
    b.version(2);
    b.alias("select a random signal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectRelationshipDataSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectRelationshipDataSignal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f38b27L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.SignalSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379eeL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321879452455");
    b.version(2);
    b.property("relationshipName", 0x78ac3095f38b31L).type(PrimitiveTypeId.STRING).origin("33966321879452465").done();
    b.property("dataName", 0x78ac3095f38b33L).type(PrimitiveTypeId.STRING).origin("33966321879452467").done();
    b.alias("select signal based on relationship of data");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectRoomByCapacity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectRoomByCapacity", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3dab4295aec9b125L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.RoomSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccab90aL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4443718667981140261");
    b.version(2);
    b.alias("select room by has capacity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectRoomByRelationshipToOccupier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectRoomByRelationshipToOccupier", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5e0c94b5L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.RoomSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccab90aL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7942748223969203381");
    b.version(2);
    b.property("relationshipName", 0x6e3a4f6d5e0c9513L).type(PrimitiveTypeId.STRING).origin("7942748223969203475").done();
    b.aggregate("AgentType", 0x6e3a4f6d5e1f4419L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd0118aabL).optional(false).ordered(true).multiple(false).origin("7942748223970427929").done();
    b.alias("select room based on relationship to occupier");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectRoomWithNoAgentsOfType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelectRoomWithNoAgentsOfType", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccac9a5L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.RoomSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6e3a4f6d5ccab90aL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/7942748223948114341");
    b.version(2);
    b.aggregate("AgentType", 0x6e3a4f6d5ccadba7L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd0118aabL).optional(false).ordered(true).multiple(false).origin("7942748223948118951").done();
    b.alias("select room containing no x type agents");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelfInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SelfInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b5cf14L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.HumanInstance", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a2L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493511036692");
    b.version(2);
    b.alias("me");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSendSignalAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SendSignalAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f1890L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4211260315489212560");
    b.version(2);
    b.aggregate("signalInitReference", 0x3a7166f1d96f1891L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f0c93L).optional(false).ordered(true).multiple(false).origin("4211260315489212561").done();
    b.alias("send signal");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "Signal", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd010732aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/513408552829743914");
    b.version(2);
    b.property("description", 0x71ffe5bd01074a3L).type(PrimitiveTypeId.STRING).origin("513408552829744291").done();
    b.aggregate("senders", 0x3a7166f1d96f0ca7L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd0118aabL).optional(false).ordered(true).multiple(true).origin("4211260315489209511").done();
    b.aggregate("receivers", 0x139a759561627f7L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd0118aabL).optional(false).ordered(true).multiple(true).origin("88285669848655863").done();
    b.aggregate("data", 0x3a7166f1d96f0c97L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f0c96L).optional(true).ordered(true).multiple(true).origin("4211260315489209495").done();
    b.aggregate("preCondition", 0x3dab4295afba851bL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L).optional(true).ordered(true).multiple(false).origin("4443718667996923163").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignalDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SignalDefinition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd010732dL);
    b.class_(false, false, true);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/513408552829743917");
    b.version(2);
    b.aggregate("signals", 0x71ffe5bd010732eL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd010732aL).optional(true).ordered(true).multiple(true).origin("513408552829743918").done();
    b.alias("Signals");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignalInitReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SignalInitReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f0c93L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4211260315489209491");
    b.version(2);
    b.associate("signal", 0x3a7166f1d96f0c94L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd010732aL).optional(false).origin("4211260315489209492").done();
    b.aggregate("signalContent", 0x3c282c112f12561fL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x45056e1fe037ad68L).optional(true).ordered(true).multiple(true).origin("4334763093659899423").done();
    b.aggregate("signalReceiver", 0x139a75956a903beL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a2L).optional(true).ordered(true).multiple(false).origin("88285669858280382").done();
    b.alias("signal initialize");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignalReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SignalReference", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd013d59eL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.SignalTrigger", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x2faec239055220c9L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/513408552829965726");
    b.version(2);
    b.associate("signal", 0x71ffe5bd013d59fL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x71ffe5bd010732aL).optional(false).origin("513408552829965727").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignalSelectionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SignalSelectionRule", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379eeL);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321879448046");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignalSelectionRuleLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SignalSelectionRuleLine", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379d6L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/33966321879448022");
    b.version(2);
    b.aggregate("condition", 0x78ac3095f379e0L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L).optional(true).ordered(true).multiple(false).origin("33966321879448032").done();
    b.aggregate("rule", 0x78ac3095f379e2L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x78ac3095f379eeL).optional(false).ordered(true).multiple(false).origin("33966321879448034").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSignalTrigger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SignalTrigger", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x2faec239055220c9L);
    b.class_(false, true, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/3435897115888459977");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpaceAtCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "SpaceAtCondition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125578L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Condition", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093659899256");
    b.version(2);
    b.aggregate("left", 0x3c282c112f125622L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a2L).optional(false).ordered(true).multiple(false).origin("4334763093659899426").done();
    b.aggregate("right", 0x3c282c112f125624L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b863a3L).optional(false).ordered(true).multiple(false).origin("4334763093659899428").done();
    b.alias("person location condtion");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStayAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "StayAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f188fL);
    b.class_(false, true, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4211260315489212559");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStayForConditionAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "StayForConditionAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f19d58aL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.StayAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f188fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093660390794");
    b.version(2);
    b.aggregate("condition", 0x3c282c112f19d58bL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3ee12f7242ebbb42L).optional(false).ordered(true).multiple(false).origin("4334763093660390795").done();
    b.aggregate("consequence", 0xbc00e5badf3b528L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0xbc00e5badf6b520L).optional(true).ordered(true).multiple(false).origin("846692516868896040").done();
    b.alias("stay until");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStayForTimeAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "StayForTimeAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f19d52dL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.StayAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3a7166f1d96f188fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4334763093660390701");
    b.version(2);
    b.property("timeSpan", 0x3c282c112f19d52eL).type(PrimitiveTypeId.INTEGER).origin("4334763093660390702").done();
    b.alias("stay for a while");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStopOrder() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "StopOrder", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bfL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Order", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x7606d63a99b483bcL);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/8504720493510951871");
    b.version(2);
    b.alias("stop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeDistributionLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "TimeDistributionLine", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb5610eb7L);
    b.class_(false, false, false);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/2985733650858970807");
    b.version(2);
    b.property("Time", 0x296f74efb5610ed3L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("2985733650858970835").done();
    b.property("Occurances", 0x296f74efb5610ed4L).type(PrimitiveTypeId.INTEGER).origin("2985733650858970836").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeDistributionTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "TimeDistributionTable", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb5610e89L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/2985733650858970761");
    b.version(2);
    b.aggregate("lines", 0x296f74efb5610f1bL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb5610eb7L).optional(true).ordered(true).multiple(true).origin("2985733650858970907").done();
    b.alias("Time distribution table");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUpdateAttributeAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "UpdateAttributeAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x50f1fbdc6defec6aL);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/5832719916577320042");
    b.version(2);
    b.associate("actorRef", 0x296f74efb8746926L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce2f6271L).optional(false).origin("2985733650910570790").done();
    b.aggregate("attributeReference", 0xaabf015bd236636L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f125519L).optional(false).ordered(true).multiple(false).origin("768972137554994742").done();
    b.aggregate("value", 0xaabf015bd2bf361L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("768972137555555169").done();
    b.alias("updateAttribute");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUseResourceAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("AgentLanguage", "UseResourceAction", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3bf86d07f0a062f6L);
    b.class_(false, false, false);
    b.super_("AgentLanguage.structure.Behaviour", 0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x35463334ce308547L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:773fb116-fb45-4750-a73a-f0ffaf85115c(AgentLanguage.structure)/4321323723331232502");
    b.version(2);
    b.associate("targetResource", 0x3bf86d07f0e2d1d2L).target(0x1a0150acdda54129L, 0x824e01dce96fdea4L, 0x3bf86d07f032c8d7L).optional(false).origin("4321323723335586258").done();
    b.aggregate("targetLocation", 0x3bf86d07f12de6c4L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x3c282c112f1255b0L).optional(false).ordered(true).multiple(false).origin("4321323723340506820").done();
    b.alias("use resource");
    return b.create();
  }
}

package EDLanguage.sandbox;

/*Generated by MPS */

import simcore.basicStructures.Test;
import java.util.HashMap;
import simcore.utilities.Distribution;
import java.util.Map;

public class LabAsymptomaticPCR extends Test {
  private static LabAsymptomaticPCR instance;
  private LabAsymptomaticPCR() {
    sensitivity = 0.99;
    specificity = 0.95;
    processingTime = 7200;
    name = "LabAsymptomaticPCR";

    HashMap returnMap = new HashMap();
    double TotalOccurances = 6841;
    returnMap.put(420, ((Double) (100 / TotalOccurances)));
    returnMap.put(660, ((Double) (950 / TotalOccurances)));
    returnMap.put(900, ((Double) (1500 / TotalOccurances)));
    returnMap.put(1140, ((Double) (1250 / TotalOccurances)));
    returnMap.put(1380, ((Double) (900 / TotalOccurances)));
    returnMap.put(1620, ((Double) (600 / TotalOccurances)));
    returnMap.put(1860, ((Double) (400 / TotalOccurances)));
    returnMap.put(2100, ((Double) (300 / TotalOccurances)));
    returnMap.put(2340, ((Double) (250 / TotalOccurances)));
    returnMap.put(2580, ((Double) (200 / TotalOccurances)));
    returnMap.put(2820, ((Double) (150 / TotalOccurances)));
    returnMap.put(3180, ((Double) (90 / TotalOccurances)));
    returnMap.put(3420, ((Double) (70 / TotalOccurances)));
    returnMap.put(4500, ((Double) (50 / TotalOccurances)));
    returnMap.put(5220, ((Double) (30 / TotalOccurances)));
    processingTimeDistribution = new Distribution<Integer>((Map) returnMap);
  }

  public static Test getInstance() {
    if (instance == null) {
      instance = new LabAsymptomaticPCR();
    }
    return instance;
  }

}

package EDLanguage.sandbox;

/*Generated by MPS */

import repast.simphony.space.continuous.ContinuousSpace;
import repast.simphony.space.grid.Grid;
import simcore.Signals.Signal;
import simcore.action.Action;
import simcore.action.ActionStep;
import simcore.action.basicAction.MoveAction;
import simcore.action.basicAction.OccupyAction;
import simcore.basicStructures.Desk;
import simcore.action.basicAction.OrderAction;
import simcore.agents.Patient;
import simcore.Signals.Orders.MoveToOrder;
import simcore.action.basicAction.StayForTimeAction;
import simcore.Signals.DirectSignal;
import simcore.action.basicAction.SendSignalAction;
import simcore.action.basicAction.AdmitAction;
import simcore.basicStructures.AdmissionBays;
import simcore.action.ConsequenceStep;
import simcore.action.Consequence;
import simcore.action.basicAction.conditions.PossibilityCondition;
import simcore.action.basicAction.DischargeAction;

public class JuniorDoctor extends Doctor {

  public double stress = Double.parseDouble("" + "1");
  public double mistakes = Double.parseDouble("" + "0");
  public double positivePatientsSeen = Double.parseDouble("" + "0");
  public double NegativePatientsSeen = Double.parseDouble("" + "0");
  public double groupStress = Double.parseDouble("" + "0");

  public JuniorDoctor(ContinuousSpace<Object> space, Grid<Object> grid) {
    super(space, grid);
    mintMyMaxPatients = 0;
  }

  public JuniorDoctor(ContinuousSpace<Object> space, Grid<Object> grid, String pstrStartLocation) {
    super(space, grid, pstrStartLocation);
  }

  public void SetMission(Signal s) {
    switch (s.getName()) {
      case "":
        break;
      case "PatientWaitingForDoctor":
        curMission = new Action("InitialObsevations");
        this.InitInitialObsevations(s);
        break;
      case "LFDPositive":
        curMission = new Action("LFDPositive");
        this.InitLFDPositive(s);
        break;
      case "LFDNegative":
        curMission = new Action("LFDNegative");
        this.InitLFDNegative(s);
        break;
      case "LIATPositive":
        curMission = new Action("LIATPositive");
        this.InitLIATPositive(s);
        break;
      case "LIATNegative":
        curMission = new Action("LIATNegative");
        this.InitLIATNegative(s);
        break;
      case "PatientNeedsFinalConsutlation":
        curMission = new Action("GiveConsultation");
        this.InitGiveConsultation(s);
        break;
      default:
        System.out.println("Set mission: " + s.getName() + " failed!");
        return;
    }
    curActionStep = 0;
  }

  public void InitDoSomething(Signal s) {
    System.out.println("DoSomething" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(this)));

  }
  public void InitDoOtherThings(Signal s) {
    System.out.println("DoOtherThings" + " function called");

    Signal sendSignalTemp = new Signal();

    this.InitDoSomething(s);

  }
  public void InitInitialObsevations(Signal s) {
    System.out.println("InitialObsevations" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(DoctorOffice.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OccupyAction().WithTarget(Desk.class)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(this))));
    curMission.WithStep(new ActionStep().WithName("Inspect the patient").WithAction(new StayForTimeAction().WithTimeSpan(300)));
    this.InitDecideOnPatientPathway(s);

  }
  public void InitLFDPositive(Signal s) {
    System.out.println("LFDPositive" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(DoctorOffice.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OccupyAction().WithTarget(Desk.class)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(this))));
    curMission.WithStep(new ActionStep().WithName("Give patient swab test").WithAction(new StayForTimeAction().WithTimeSpan(180)));
    curMission.WithStep(new ActionStep().WithName("Go to testing machine").WithAction(new MoveAction().WithTarget(LIATBooth.getInstance())));
    curMission.WithStep(new ActionStep().WithName("Put swabs in machine").WithAction(new StayForTimeAction().WithTimeSpan(60)));
    sendSignalTemp = new ConductLIATSignal();
    if (sendSignalTemp instanceof DirectSignal) {
      ((DirectSignal) sendSignalTemp).setTarget();
    }
    sendSignalTemp.AddData("patient", s.GetData("patient"));
    sendSignalTemp.AddData("replyTo", this);
    curMission.WithStep(new ActionStep().WithName("").WithAction(new SendSignalAction().WithSignal(sendSignalTemp)));

  }
  public void InitLFDNegative(Signal s) {
    System.out.println("LFDNegative" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(DoctorOffice.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OccupyAction().WithTarget(Desk.class)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(this))));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new StayForTimeAction().WithTimeSpan(120)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new AdmitAction().WithPatient(((Patient) s.GetData("patient"))).WithAdmissionBay(AdmissionBays.AMBER)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(ReadMap().FindPlace("Exit")))));

    curMission.WithStep(new ConsequenceStep().WithOrder(new Consequence().WithContent("NegativePatientsSeen", "+=", 1)));
  }
  public void InitLIATPositive(Signal s) {
    System.out.println("LIATPositive" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(LIATBooth.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(DoctorOffice.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OccupyAction().WithTarget(Desk.class)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(this))));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new StayForTimeAction().WithTimeSpan(120)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new AdmitAction().WithPatient(((Patient) s.GetData("patient"))).WithAdmissionBay(AdmissionBays.RED)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(ReadMap().FindPlace("Exit")))));

  }
  public void InitOrderXRay(Signal s) {
    System.out.println("OrderXRay" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(ReadMap().FindPlace("MajorsWaitingRoom")))));
    sendSignalTemp = new XRaySignal();
    if (sendSignalTemp instanceof DirectSignal) {
      ((DirectSignal) sendSignalTemp).setTarget();
    }
    sendSignalTemp.AddData("patient", s.GetData("patient"));
    sendSignalTemp.AddData("returnTo", ReadMap().FindPlace("MajorsWaitingRoom"));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new SendSignalAction().WithSignal(sendSignalTemp)));

  }
  public void InitLIATNegative(Signal s) {
    System.out.println("LIATNegative" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(LIATBooth.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(DoctorOffice.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OccupyAction().WithTarget(Desk.class)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(this))));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new StayForTimeAction().WithTimeSpan(120)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new AdmitAction().WithPatient(((Patient) s.GetData("patient"))).WithAdmissionBay(AdmissionBays.AMBER)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(ReadMap().FindPlace("Exit")))));

  }
  public void InitTakeMedicine(Signal s) {
    System.out.println("TakeMedicine" + " function called");

    Signal sendSignalTemp = new Signal();

    sendSignalTemp = new NewPatientNeedMedicineSignal();
    if (sendSignalTemp instanceof DirectSignal) {
      ((DirectSignal) sendSignalTemp).setTarget();
    }
    sendSignalTemp.AddData("patient", s.GetData("patient"));
    curMission.WithStep(new ActionStep().WithName("tell nurse to take medicine for patient").WithAction(new SendSignalAction().WithSignal(sendSignalTemp)));

  }
  public void InitDecideOnPatientPathway(Signal s) {
    System.out.println("DecideOnPatientPathway" + " function called");

    Signal sendSignalTemp = new Signal();

    if (CheckCondition(new PossibilityCondition().WithPossibility(70))) {
      this.InitOrderBloodTest(s);
    } else {
      this.InitOrderXRay(s);
    }

    curMission.WithStep(new ConsequenceStep().WithOrder(new Consequence().WithContent("positivePatientsSeen", "+=", 1)));
    curMission.WithStep(new ConsequenceStep().WithOrder(new Consequence().WithContent("stress", "+=", 1)));
  }
  public void InitOrderBloodTest(Signal s) {
    System.out.println("OrderBloodTest" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(ReadMap().FindPlace("MajorsWaitingRoom")))));
    sendSignalTemp = new PatientNeedsBloodTestSignal();
    if (sendSignalTemp instanceof DirectSignal) {
      ((DirectSignal) sendSignalTemp).setTarget();
    }
    sendSignalTemp.AddData("patient", s.GetData("patient"));
    sendSignalTemp.AddData("returnTo", ReadMap().FindPlace("MajorsWaitingRoom"));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new SendSignalAction().WithSignal(sendSignalTemp)));

  }
  public void InitGiveConsultation(Signal s) {
    System.out.println("GiveConsultation" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new MoveAction().WithTarget(DoctorOffice.getInstance())));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OccupyAction().WithTarget(Desk.class)));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(this))));
    curMission.WithStep(new ActionStep().WithName("The Doctor gives a final consultation with the Patient for 5 minutes").WithAction(new StayForTimeAction().WithTimeSpan(300)));
    if (CheckCondition(new PossibilityCondition().WithPossibility(20))) {
      sendSignalTemp = new ConductLFDSignal();
      if (sendSignalTemp instanceof DirectSignal) {
        ((DirectSignal) sendSignalTemp).setTarget();
      }
      sendSignalTemp.AddData("patient", s.GetData("patient"));
      sendSignalTemp.AddData("replyTo", this);
      curMission.WithStep(new ActionStep().WithName("20% chance going to be admit, if so need to do an LFD test").WithAction(new SendSignalAction().WithSignal(sendSignalTemp)));
    } else {
      this.InitDischargePatient(s);
    }

  }
  public void InitDischargePatient(Signal s) {
    System.out.println("DischargePatient" + " function called");

    Signal sendSignalTemp = new Signal();

    curMission.WithStep(new ActionStep().WithName("").WithAction(new DischargeAction().WithPatient(((Patient) s.GetData("patient")))));
    curMission.WithStep(new ActionStep().WithName("").WithAction(new OrderAction().WithPatient(((Patient) s.GetData("patient"))).WithOrder(new MoveToOrder().WithDestination(ReadMap().FindPlace("Entrance")))));

  }

}

package EDLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_ModifyOperator extends EnumerationDescriptorBase {

  public EnumerationDescriptor_ModifyOperator() {
    super(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x50f1fbdc6defec6fL, "ModifyOperator", "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/5832719916577320047");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_increase_0 = new EnumerationDescriptor.MemberDescriptor("increase", "+=", 0x50f1fbdc6defec70L, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/5832719916577320048");
  private final EnumerationDescriptor.MemberDescriptor myMember_decrease_0 = new EnumerationDescriptor.MemberDescriptor("decrease", "-=", 0x50f1fbdc6defec71L, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/5832719916577320049");
  private final EnumerationDescriptor.MemberDescriptor myMember_multiply_0 = new EnumerationDescriptor.MemberDescriptor("multiply", "*=", 0x50f1fbdc6defec74L, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/5832719916577320052");
  private final EnumerationDescriptor.MemberDescriptor myMember_divide_0 = new EnumerationDescriptor.MemberDescriptor("divide", "/=", 0x50f1fbdc6defec78L, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/5832719916577320056");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x50f1fbdc6defec6fL, 0x50f1fbdc6defec70L, 0x50f1fbdc6defec71L, 0x50f1fbdc6defec74L, 0x50f1fbdc6defec78L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_increase_0, myMember_decrease_0, myMember_multiply_0, myMember_divide_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "increase":
        return myMember_increase_0;
      case "decrease":
        return myMember_decrease_0;
      case "multiply":
        return myMember_multiply_0;
      case "divide":
        return myMember_divide_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}

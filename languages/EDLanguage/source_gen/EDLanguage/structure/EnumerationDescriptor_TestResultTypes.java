package EDLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_TestResultTypes extends EnumerationDescriptorBase {

  public EnumerationDescriptor_TestResultTypes() {
    super(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x139a75957529755L, "TestResultTypes", "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/88285669869393749");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_Positive_0 = new EnumerationDescriptor.MemberDescriptor("Positive", "positive", 0x139a75957529756L, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/88285669869393750");
  private final EnumerationDescriptor.MemberDescriptor myMember_Negative_0 = new EnumerationDescriptor.MemberDescriptor("Negative", "negative", 0x139a75957529757L, "r:773fb116-fb45-4750-a73a-f0ffaf85115c(EDLanguage.structure)/88285669869393751");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x139a75957529755L, 0x139a75957529756L, 0x139a75957529757L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_Positive_0, myMember_Negative_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "Positive":
        return myMember_Positive_0;
      case "Negative":
        return myMember_Negative_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}

package StaffDefinitionLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptStaffType = createDescriptorForStaffType();
  /*package*/ final ConceptDescriptor myConceptSubstitutionCapability = createDescriptorForSubstitutionCapability();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptStaffType, myConceptSubstitutionCapability);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.StaffType:
        return myConceptStaffType;
      case LanguageConceptSwitch.SubstitutionCapability:
        return myConceptSubstitutionCapability;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForStaffType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StaffDefinitionLanguage", "StaffType", 0x51897544caf540aaL, 0x8043f7e4cc291b23L, 0x257456637584feb6L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:a0e82328-724a-4f3c-8680-a9b9906b6823(StaffDefinitionLanguage.structure)/2698877061875170998");
    b.version(2);
    b.aggregate("canActAs", 0x257456637584ff0eL).target(0x51897544caf540aaL, 0x8043f7e4cc291b23L, 0x257456637584fefbL).optional(true).ordered(true).multiple(true).origin("2698877061875171086").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstitutionCapability() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StaffDefinitionLanguage", "SubstitutionCapability", 0x51897544caf540aaL, 0x8043f7e4cc291b23L, 0x257456637584fefbL);
    b.class_(false, false, false);
    b.origin("r:a0e82328-724a-4f3c-8680-a9b9906b6823(StaffDefinitionLanguage.structure)/2698877061875171067");
    b.version(2);
    b.aggregate("expression", 0x257456637584ff35L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(true).ordered(true).multiple(false).origin("2698877061875171125").done();
    return b.create();
  }
}

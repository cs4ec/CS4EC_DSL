package BuiltEnvironment.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ActorInstantiation = 0;
  public static final int AdmissionBay = 1;
  public static final int AdmissionBayList = 2;
  public static final int Area = 3;
  public static final int MapImporter = 4;
  public static final int Resource = 5;
  public static final int ResourceAllocation = 6;
  public static final int ResourceAvailabilityVariable = 7;
  public static final int Room = 8;
  public static final int RoomInstanceDefinition = 9;
  public static final int RoomType = 10;
  public static final int ScenarioBuilder = 11;
  public static final int WallDefinition = 12;
  public static final int WallInstanceDefinition = 13;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x1a0150acdda54129L, 0x824e01dce96fdea4L);
    builder.put(0x35463334ce2f7b02L, ActorInstantiation);
    builder.put(0xc489c6b16b4a524L, AdmissionBay);
    builder.put(0xc489c6b16b4a529L, AdmissionBayList);
    builder.put(0x3c282c112f249082L, Area);
    builder.put(0xaabf015bed74217L, MapImporter);
    builder.put(0x3bf86d07f032c8d7L, Resource);
    builder.put(0x3bf86d07ef54c6b7L, ResourceAllocation);
    builder.put(0x3bf86d07f2b57f6bL, ResourceAvailabilityVariable);
    builder.put(0x3c282c112f249042L, Room);
    builder.put(0x3c282c112f249045L, RoomInstanceDefinition);
    builder.put(0x5dafd33966e8fe19L, RoomType);
    builder.put(0x35463334ce2f7b00L, ScenarioBuilder);
    builder.put(0x109830a68a82ca51L, WallDefinition);
    builder.put(0x109830a68a78a1e8L, WallInstanceDefinition);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}

package ActionCards.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractDurationLine = 0;
  public static final int Action = 1;
  public static final int ActionCard = 2;
  public static final int ActionCardCondition = 3;
  public static final int ActionCardElement = 4;
  public static final int ActionCardReference = 5;
  public static final int ActionDurationEmptyLine = 6;
  public static final int ActionDurationMinutes = 7;
  public static final int AdmissionAction = 8;
  public static final int AndConditional = 9;
  public static final int AttendanceRoute = 10;
  public static final int Attribute = 11;
  public static final int AttributeLine = 12;
  public static final int AttributeTable = 13;
  public static final int BooleanExpression = 14;
  public static final int Branch = 15;
  public static final int BranchConditional = 16;
  public static final int ConditonalStatement = 17;
  public static final int DischargeAction = 18;
  public static final int EDScenario = 19;
  public static final int ElectiveAttendanceRoute = 20;
  public static final int EmergencyAttendanceRoute = 21;
  public static final int FullyVaccinated = 22;
  public static final int IPatientProperty = 23;
  public static final int IPatientPropertyValue = 24;
  public static final int ImmunosuppressedProperty = 25;
  public static final int InfectionStatusProperty = 26;
  public static final int LocationCapacityCondition = 27;
  public static final int No = 28;
  public static final int OrConditional = 29;
  public static final int PartiallyVaccinated = 30;
  public static final int PatientCohortCondition = 31;
  public static final int PatientPropertyConditional = 32;
  public static final int PatientSeverity = 33;
  public static final int PatientSeverityProperty = 34;
  public static final int PatientSeverity_Low = 35;
  public static final int PatientSeverity_Severe = 36;
  public static final int Patient_Severity_Moderate = 37;
  public static final int ProbabilityCondition = 38;
  public static final int RecentCovidContactProperty = 39;
  public static final int ResourceAvailableCondition = 40;
  public static final int RoomSelectionCondition = 41;
  public static final int RoomSelectionLine = 42;
  public static final int RoomSelectionRule = 43;
  public static final int RoomTypeCondition = 44;
  public static final int SelectEmptyRoom = 45;
  public static final int SymptomList = 46;
  public static final int TimeDistributionLine = 47;
  public static final int TimeDistributionTable = 48;
  public static final int TimeOfDayCondition = 49;
  public static final int Unvaccinated = 50;
  public static final int VaccinationStatus = 51;
  public static final int VaccineStatusProperty = 52;
  public static final int Yes = 53;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L);
    builder.put(0x60a366dc12b6a870L, AbstractDurationLine);
    builder.put(0x2ef557ae9cb06864L, Action);
    builder.put(0x2ef557ae9cb06848L, ActionCard);
    builder.put(0x18668ef27386cf02L, ActionCardCondition);
    builder.put(0x348ff1b011fd1debL, ActionCardElement);
    builder.put(0x18668ef2758152c8L, ActionCardReference);
    builder.put(0x60a366dc12abf608L, ActionDurationEmptyLine);
    builder.put(0x60a366dc12ac1225L, ActionDurationMinutes);
    builder.put(0x78ac3095dfdf9aL, AdmissionAction);
    builder.put(0x74711ce331f57db6L, AndConditional);
    builder.put(0x18668ef273b09a5dL, AttendanceRoute);
    builder.put(0x25745663758ab027L, Attribute);
    builder.put(0x25745663764b1a7cL, AttributeLine);
    builder.put(0x25745663764b1a60L, AttributeTable);
    builder.put(0x18668ef2732bb4e3L, BooleanExpression);
    builder.put(0x4f415ebce3f3456eL, Branch);
    builder.put(0x18668ef26fa67c60L, BranchConditional);
    builder.put(0x74711ce3321800daL, ConditonalStatement);
    builder.put(0x18668ef2756fb14cL, DischargeAction);
    builder.put(0x4af9c647eff82e56L, EDScenario);
    builder.put(0x18668ef273b09e71L, ElectiveAttendanceRoute);
    builder.put(0x18668ef273b09c56L, EmergencyAttendanceRoute);
    builder.put(0x18668ef26fc61137L, FullyVaccinated);
    builder.put(0x18668ef26f3e3b4cL, IPatientProperty);
    builder.put(0x34a8e13b09c97b2cL, IPatientPropertyValue);
    builder.put(0x18668ef2755e811eL, ImmunosuppressedProperty);
    builder.put(0x18668ef26f3e7089L, InfectionStatusProperty);
    builder.put(0x4ab0a0c760d991ecL, LocationCapacityCondition);
    builder.put(0x18668ef2732bb4e4L, No);
    builder.put(0x74711ce33209e2aeL, OrConditional);
    builder.put(0x18668ef26fc61154L, PartiallyVaccinated);
    builder.put(0x74711ce330f1825aL, PatientCohortCondition);
    builder.put(0x18668ef270ed0969L, PatientPropertyConditional);
    builder.put(0x71b04c23524f52dL, PatientSeverity);
    builder.put(0x71b04c23524d47fL, PatientSeverityProperty);
    builder.put(0x71b04c23525027bL, PatientSeverity_Low);
    builder.put(0x71b04c23524f37eL, PatientSeverity_Severe);
    builder.put(0x71b04c23524ff6bL, Patient_Severity_Moderate);
    builder.put(0x4813ad0fc64c280L, ProbabilityCondition);
    builder.put(0x18668ef2732b9054L, RecentCovidContactProperty);
    builder.put(0x3bf86d07f23cf033L, ResourceAvailableCondition);
    builder.put(0x43b5616bd1d154aeL, RoomSelectionCondition);
    builder.put(0x43b5616bd1d0be74L, RoomSelectionLine);
    builder.put(0x334005c766547220L, RoomSelectionRule);
    builder.put(0x43b5616bd1d154adL, RoomTypeCondition);
    builder.put(0x43b5616bd1d0fb3bL, SelectEmptyRoom);
    builder.put(0x6ca3e29db47911f9L, SymptomList);
    builder.put(0x20b46d627ba89adL, TimeDistributionLine);
    builder.put(0x20b46d627ba89aaL, TimeDistributionTable);
    builder.put(0x3bf86d07f418f43dL, TimeOfDayCondition);
    builder.put(0x18668ef26fc61167L, Unvaccinated);
    builder.put(0x18668ef26fc61141L, VaccinationStatus);
    builder.put(0x18668ef26f40915dL, VaccineStatusProperty);
    builder.put(0x18668ef2732bb4e2L, Yes);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}

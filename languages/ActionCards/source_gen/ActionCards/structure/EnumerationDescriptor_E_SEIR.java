package ActionCards.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_E_SEIR extends EnumerationDescriptorBase {

  public EnumerationDescriptor_E_SEIR() {
    super(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab06aL, "E_SEIR", "r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544170");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_Susceptible_0 = new EnumerationDescriptor.MemberDescriptor("Susceptible", "Susceptible", 0x25745663758ab06bL, "r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544171");
  private final EnumerationDescriptor.MemberDescriptor myMember_Infectious_0 = new EnumerationDescriptor.MemberDescriptor("Infectious", "Infectious", 0x25745663758ab075L, "r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544181");
  private final EnumerationDescriptor.MemberDescriptor myMember_Recovered_0 = new EnumerationDescriptor.MemberDescriptor("Recovered", "Recovered", 0x25745663758ab078L, "r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544184");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab06aL, 0x25745663758ab06bL, 0x25745663758ab075L, 0x25745663758ab078L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_Susceptible_0, myMember_Infectious_0, myMember_Recovered_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return myMember_Susceptible_0;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "Susceptible":
        return myMember_Susceptible_0;
      case "Infectious":
        return myMember_Infectious_0;
      case "Recovered":
        return myMember_Recovered_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}

package ActionCards.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractDurationLine = createDescriptorForAbstractDurationLine();
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActionCard = createDescriptorForActionCard();
  /*package*/ final ConceptDescriptor myConceptActionCardCondition = createDescriptorForActionCardCondition();
  /*package*/ final ConceptDescriptor myConceptActionCardElement = createDescriptorForActionCardElement();
  /*package*/ final ConceptDescriptor myConceptActionCardReference = createDescriptorForActionCardReference();
  /*package*/ final ConceptDescriptor myConceptActionDurationEmptyLine = createDescriptorForActionDurationEmptyLine();
  /*package*/ final ConceptDescriptor myConceptActionDurationMinutes = createDescriptorForActionDurationMinutes();
  /*package*/ final ConceptDescriptor myConceptAdmissionAction = createDescriptorForAdmissionAction();
  /*package*/ final ConceptDescriptor myConceptAndConditional = createDescriptorForAndConditional();
  /*package*/ final ConceptDescriptor myConceptAttendanceRoute = createDescriptorForAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptAttributeLine = createDescriptorForAttributeLine();
  /*package*/ final ConceptDescriptor myConceptAttributeTable = createDescriptorForAttributeTable();
  /*package*/ final ConceptDescriptor myConceptBooleanExpression = createDescriptorForBooleanExpression();
  /*package*/ final ConceptDescriptor myConceptBranch = createDescriptorForBranch();
  /*package*/ final ConceptDescriptor myConceptBranchConditional = createDescriptorForBranchConditional();
  /*package*/ final ConceptDescriptor myConceptCompositeDiagnosticCondition = createDescriptorForCompositeDiagnosticCondition();
  /*package*/ final ConceptDescriptor myConceptCompositeTest = createDescriptorForCompositeTest();
  /*package*/ final ConceptDescriptor myConceptCompositeTestResultCondition = createDescriptorForCompositeTestResultCondition();
  /*package*/ final ConceptDescriptor myConceptConditionalLine = createDescriptorForConditionalLine();
  /*package*/ final ConceptDescriptor myConceptConditionalSelection = createDescriptorForConditionalSelection();
  /*package*/ final ConceptDescriptor myConceptConditonalStatement = createDescriptorForConditonalStatement();
  /*package*/ final ConceptDescriptor myConceptDiagnosticCondition = createDescriptorForDiagnosticCondition();
  /*package*/ final ConceptDescriptor myConceptDischargeAction = createDescriptorForDischargeAction();
  /*package*/ final ConceptDescriptor myConceptDiseaseTest = createDescriptorForDiseaseTest();
  /*package*/ final ConceptDescriptor myConceptEDScenario = createDescriptorForEDScenario();
  /*package*/ final ConceptDescriptor myConceptElectiveAttendanceRoute = createDescriptorForElectiveAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptEmergencyAttendanceRoute = createDescriptorForEmergencyAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptFullyVaccinated = createDescriptorForFullyVaccinated();
  /*package*/ final ConceptDescriptor myConceptIPatientProperty = createDescriptorForIPatientProperty();
  /*package*/ final ConceptDescriptor myConceptIPatientPropertyValue = createDescriptorForIPatientPropertyValue();
  /*package*/ final ConceptDescriptor myConceptImmunocompromisedCondition = createDescriptorForImmunocompromisedCondition();
  /*package*/ final ConceptDescriptor myConceptImmunosuppressedProperty = createDescriptorForImmunosuppressedProperty();
  /*package*/ final ConceptDescriptor myConceptInfectionStatusCondition = createDescriptorForInfectionStatusCondition();
  /*package*/ final ConceptDescriptor myConceptInfectionStatusProperty = createDescriptorForInfectionStatusProperty();
  /*package*/ final ConceptDescriptor myConceptLocationCapacityCondition = createDescriptorForLocationCapacityCondition();
  /*package*/ final ConceptDescriptor myConceptNo = createDescriptorForNo();
  /*package*/ final ConceptDescriptor myConceptObservationTest = createDescriptorForObservationTest();
  /*package*/ final ConceptDescriptor myConceptObservationsCondition = createDescriptorForObservationsCondition();
  /*package*/ final ConceptDescriptor myConceptOrConditional = createDescriptorForOrConditional();
  /*package*/ final ConceptDescriptor myConceptPartiallyVaccinated = createDescriptorForPartiallyVaccinated();
  /*package*/ final ConceptDescriptor myConceptPatientArrivalLine_old = createDescriptorForPatientArrivalLine_old();
  /*package*/ final ConceptDescriptor myConceptPatientArrivals_old = createDescriptorForPatientArrivals_old();
  /*package*/ final ConceptDescriptor myConceptPatientCohortCondition = createDescriptorForPatientCohortCondition();
  /*package*/ final ConceptDescriptor myConceptPatientProfile_old = createDescriptorForPatientProfile_old();
  /*package*/ final ConceptDescriptor myConceptPatientPropertyConditional = createDescriptorForPatientPropertyConditional();
  /*package*/ final ConceptDescriptor myConceptPatientSeverity = createDescriptorForPatientSeverity();
  /*package*/ final ConceptDescriptor myConceptPatientSeverityProperty = createDescriptorForPatientSeverityProperty();
  /*package*/ final ConceptDescriptor myConceptPatientSeverity_Low = createDescriptorForPatientSeverity_Low();
  /*package*/ final ConceptDescriptor myConceptPatientSeverity_Severe = createDescriptorForPatientSeverity_Severe();
  /*package*/ final ConceptDescriptor myConceptPatient_Severity_Moderate = createDescriptorForPatient_Severity_Moderate();
  /*package*/ final ConceptDescriptor myConceptPatient_old = createDescriptorForPatient_old();
  /*package*/ final ConceptDescriptor myConceptPerson = createDescriptorForPerson();
  /*package*/ final ConceptDescriptor myConceptProbabilityCondition = createDescriptorForProbabilityCondition();
  /*package*/ final ConceptDescriptor myConceptProbabilityDistribution = createDescriptorForProbabilityDistribution();
  /*package*/ final ConceptDescriptor myConceptProbabilityDistributionLine = createDescriptorForProbabilityDistributionLine();
  /*package*/ final ConceptDescriptor myConceptProcessingTimeLine = createDescriptorForProcessingTimeLine();
  /*package*/ final ConceptDescriptor myConceptProcessingTimeTable = createDescriptorForProcessingTimeTable();
  /*package*/ final ConceptDescriptor myConceptRecentCOVIDContactCondition = createDescriptorForRecentCOVIDContactCondition();
  /*package*/ final ConceptDescriptor myConceptRecentCovidContactProperty = createDescriptorForRecentCovidContactProperty();
  /*package*/ final ConceptDescriptor myConceptResourceAvailableCondition = createDescriptorForResourceAvailableCondition();
  /*package*/ final ConceptDescriptor myConceptResultsMappingLine = createDescriptorForResultsMappingLine();
  /*package*/ final ConceptDescriptor myConceptResultsMappingTable = createDescriptorForResultsMappingTable();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionCondition = createDescriptorForRoomSelectionCondition();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionLine = createDescriptorForRoomSelectionLine();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionRule = createDescriptorForRoomSelectionRule();
  /*package*/ final ConceptDescriptor myConceptRoomTypeCondition = createDescriptorForRoomTypeCondition();
  /*package*/ final ConceptDescriptor myConceptSelectEmptyRoom = createDescriptorForSelectEmptyRoom();
  /*package*/ final ConceptDescriptor myConceptStaffNumber = createDescriptorForStaffNumber();
  /*package*/ final ConceptDescriptor myConceptStaffType = createDescriptorForStaffType();
  /*package*/ final ConceptDescriptor myConceptStaffTypeReference = createDescriptorForStaffTypeReference();
  /*package*/ final ConceptDescriptor myConceptSymptomList = createDescriptorForSymptomList();
  /*package*/ final ConceptDescriptor myConceptTest = createDescriptorForTest();
  /*package*/ final ConceptDescriptor myConceptTestCapturedDisease = createDescriptorForTestCapturedDisease();
  /*package*/ final ConceptDescriptor myConceptTestOutcome = createDescriptorForTestOutcome();
  /*package*/ final ConceptDescriptor myConceptTestSelectionRule = createDescriptorForTestSelectionRule();
  /*package*/ final ConceptDescriptor myConceptTestSelectionRuleLine = createDescriptorForTestSelectionRuleLine();
  /*package*/ final ConceptDescriptor myConceptTestSelectionStrategy = createDescriptorForTestSelectionStrategy();
  /*package*/ final ConceptDescriptor myConceptTimeDistributionLine = createDescriptorForTimeDistributionLine();
  /*package*/ final ConceptDescriptor myConceptTimeDistributionTable = createDescriptorForTimeDistributionTable();
  /*package*/ final ConceptDescriptor myConceptTimeOfDayCondition = createDescriptorForTimeOfDayCondition();
  /*package*/ final ConceptDescriptor myConceptUnvaccinated = createDescriptorForUnvaccinated();
  /*package*/ final ConceptDescriptor myConceptVaccinationStatus = createDescriptorForVaccinationStatus();
  /*package*/ final ConceptDescriptor myConceptVaccineStatusCondition = createDescriptorForVaccineStatusCondition();
  /*package*/ final ConceptDescriptor myConceptVaccineStatusProperty = createDescriptorForVaccineStatusProperty();
  /*package*/ final ConceptDescriptor myConceptYes = createDescriptorForYes();
  /*package*/ final EnumerationDescriptor myEnumerationE_Result = new EnumerationDescriptor_E_Result();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.extendedLanguage(0x1a0150acdda54129L, 0x824e01dce96fdea4L, "BuiltEnvironment");
    deps.aggregatedLanguage(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, "AgentLanguage");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.aggregatedLanguage(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, "DiseaseModel");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractDurationLine, myConceptAction, myConceptActionCard, myConceptActionCardCondition, myConceptActionCardElement, myConceptActionCardReference, myConceptActionDurationEmptyLine, myConceptActionDurationMinutes, myConceptAdmissionAction, myConceptAndConditional, myConceptAttendanceRoute, myConceptAttribute, myConceptAttributeLine, myConceptAttributeTable, myConceptBooleanExpression, myConceptBranch, myConceptBranchConditional, myConceptCompositeDiagnosticCondition, myConceptCompositeTest, myConceptCompositeTestResultCondition, myConceptConditionalLine, myConceptConditionalSelection, myConceptConditonalStatement, myConceptDiagnosticCondition, myConceptDischargeAction, myConceptDiseaseTest, myConceptEDScenario, myConceptElectiveAttendanceRoute, myConceptEmergencyAttendanceRoute, myConceptFullyVaccinated, myConceptIPatientProperty, myConceptIPatientPropertyValue, myConceptImmunocompromisedCondition, myConceptImmunosuppressedProperty, myConceptInfectionStatusCondition, myConceptInfectionStatusProperty, myConceptLocationCapacityCondition, myConceptNo, myConceptObservationTest, myConceptObservationsCondition, myConceptOrConditional, myConceptPartiallyVaccinated, myConceptPatientArrivalLine_old, myConceptPatientArrivals_old, myConceptPatientCohortCondition, myConceptPatientProfile_old, myConceptPatientPropertyConditional, myConceptPatientSeverity, myConceptPatientSeverityProperty, myConceptPatientSeverity_Low, myConceptPatientSeverity_Severe, myConceptPatient_Severity_Moderate, myConceptPatient_old, myConceptPerson, myConceptProbabilityCondition, myConceptProbabilityDistribution, myConceptProbabilityDistributionLine, myConceptProcessingTimeLine, myConceptProcessingTimeTable, myConceptRecentCOVIDContactCondition, myConceptRecentCovidContactProperty, myConceptResourceAvailableCondition, myConceptResultsMappingLine, myConceptResultsMappingTable, myConceptRoomSelectionCondition, myConceptRoomSelectionLine, myConceptRoomSelectionRule, myConceptRoomTypeCondition, myConceptSelectEmptyRoom, myConceptStaffNumber, myConceptStaffType, myConceptStaffTypeReference, myConceptSymptomList, myConceptTest, myConceptTestCapturedDisease, myConceptTestOutcome, myConceptTestSelectionRule, myConceptTestSelectionRuleLine, myConceptTestSelectionStrategy, myConceptTimeDistributionLine, myConceptTimeDistributionTable, myConceptTimeOfDayCondition, myConceptUnvaccinated, myConceptVaccinationStatus, myConceptVaccineStatusCondition, myConceptVaccineStatusProperty, myConceptYes);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractDurationLine:
        return myConceptAbstractDurationLine;
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.ActionCard:
        return myConceptActionCard;
      case LanguageConceptSwitch.ActionCardCondition:
        return myConceptActionCardCondition;
      case LanguageConceptSwitch.ActionCardElement:
        return myConceptActionCardElement;
      case LanguageConceptSwitch.ActionCardReference:
        return myConceptActionCardReference;
      case LanguageConceptSwitch.ActionDurationEmptyLine:
        return myConceptActionDurationEmptyLine;
      case LanguageConceptSwitch.ActionDurationMinutes:
        return myConceptActionDurationMinutes;
      case LanguageConceptSwitch.AdmissionAction:
        return myConceptAdmissionAction;
      case LanguageConceptSwitch.AndConditional:
        return myConceptAndConditional;
      case LanguageConceptSwitch.AttendanceRoute:
        return myConceptAttendanceRoute;
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.AttributeLine:
        return myConceptAttributeLine;
      case LanguageConceptSwitch.AttributeTable:
        return myConceptAttributeTable;
      case LanguageConceptSwitch.BooleanExpression:
        return myConceptBooleanExpression;
      case LanguageConceptSwitch.Branch:
        return myConceptBranch;
      case LanguageConceptSwitch.BranchConditional:
        return myConceptBranchConditional;
      case LanguageConceptSwitch.CompositeDiagnosticCondition:
        return myConceptCompositeDiagnosticCondition;
      case LanguageConceptSwitch.CompositeTest:
        return myConceptCompositeTest;
      case LanguageConceptSwitch.CompositeTestResultCondition:
        return myConceptCompositeTestResultCondition;
      case LanguageConceptSwitch.ConditionalLine:
        return myConceptConditionalLine;
      case LanguageConceptSwitch.ConditionalSelection:
        return myConceptConditionalSelection;
      case LanguageConceptSwitch.ConditonalStatement:
        return myConceptConditonalStatement;
      case LanguageConceptSwitch.DiagnosticCondition:
        return myConceptDiagnosticCondition;
      case LanguageConceptSwitch.DischargeAction:
        return myConceptDischargeAction;
      case LanguageConceptSwitch.DiseaseTest:
        return myConceptDiseaseTest;
      case LanguageConceptSwitch.EDScenario:
        return myConceptEDScenario;
      case LanguageConceptSwitch.ElectiveAttendanceRoute:
        return myConceptElectiveAttendanceRoute;
      case LanguageConceptSwitch.EmergencyAttendanceRoute:
        return myConceptEmergencyAttendanceRoute;
      case LanguageConceptSwitch.FullyVaccinated:
        return myConceptFullyVaccinated;
      case LanguageConceptSwitch.IPatientProperty:
        return myConceptIPatientProperty;
      case LanguageConceptSwitch.IPatientPropertyValue:
        return myConceptIPatientPropertyValue;
      case LanguageConceptSwitch.ImmunocompromisedCondition:
        return myConceptImmunocompromisedCondition;
      case LanguageConceptSwitch.ImmunosuppressedProperty:
        return myConceptImmunosuppressedProperty;
      case LanguageConceptSwitch.InfectionStatusCondition:
        return myConceptInfectionStatusCondition;
      case LanguageConceptSwitch.InfectionStatusProperty:
        return myConceptInfectionStatusProperty;
      case LanguageConceptSwitch.LocationCapacityCondition:
        return myConceptLocationCapacityCondition;
      case LanguageConceptSwitch.No:
        return myConceptNo;
      case LanguageConceptSwitch.ObservationTest:
        return myConceptObservationTest;
      case LanguageConceptSwitch.ObservationsCondition:
        return myConceptObservationsCondition;
      case LanguageConceptSwitch.OrConditional:
        return myConceptOrConditional;
      case LanguageConceptSwitch.PartiallyVaccinated:
        return myConceptPartiallyVaccinated;
      case LanguageConceptSwitch.PatientArrivalLine_old:
        return myConceptPatientArrivalLine_old;
      case LanguageConceptSwitch.PatientArrivals_old:
        return myConceptPatientArrivals_old;
      case LanguageConceptSwitch.PatientCohortCondition:
        return myConceptPatientCohortCondition;
      case LanguageConceptSwitch.PatientProfile_old:
        return myConceptPatientProfile_old;
      case LanguageConceptSwitch.PatientPropertyConditional:
        return myConceptPatientPropertyConditional;
      case LanguageConceptSwitch.PatientSeverity:
        return myConceptPatientSeverity;
      case LanguageConceptSwitch.PatientSeverityProperty:
        return myConceptPatientSeverityProperty;
      case LanguageConceptSwitch.PatientSeverity_Low:
        return myConceptPatientSeverity_Low;
      case LanguageConceptSwitch.PatientSeverity_Severe:
        return myConceptPatientSeverity_Severe;
      case LanguageConceptSwitch.Patient_Severity_Moderate:
        return myConceptPatient_Severity_Moderate;
      case LanguageConceptSwitch.Patient_old:
        return myConceptPatient_old;
      case LanguageConceptSwitch.Person:
        return myConceptPerson;
      case LanguageConceptSwitch.ProbabilityCondition:
        return myConceptProbabilityCondition;
      case LanguageConceptSwitch.ProbabilityDistribution:
        return myConceptProbabilityDistribution;
      case LanguageConceptSwitch.ProbabilityDistributionLine:
        return myConceptProbabilityDistributionLine;
      case LanguageConceptSwitch.ProcessingTimeLine:
        return myConceptProcessingTimeLine;
      case LanguageConceptSwitch.ProcessingTimeTable:
        return myConceptProcessingTimeTable;
      case LanguageConceptSwitch.RecentCOVIDContactCondition:
        return myConceptRecentCOVIDContactCondition;
      case LanguageConceptSwitch.RecentCovidContactProperty:
        return myConceptRecentCovidContactProperty;
      case LanguageConceptSwitch.ResourceAvailableCondition:
        return myConceptResourceAvailableCondition;
      case LanguageConceptSwitch.ResultsMappingLine:
        return myConceptResultsMappingLine;
      case LanguageConceptSwitch.ResultsMappingTable:
        return myConceptResultsMappingTable;
      case LanguageConceptSwitch.RoomSelectionCondition:
        return myConceptRoomSelectionCondition;
      case LanguageConceptSwitch.RoomSelectionLine:
        return myConceptRoomSelectionLine;
      case LanguageConceptSwitch.RoomSelectionRule:
        return myConceptRoomSelectionRule;
      case LanguageConceptSwitch.RoomTypeCondition:
        return myConceptRoomTypeCondition;
      case LanguageConceptSwitch.SelectEmptyRoom:
        return myConceptSelectEmptyRoom;
      case LanguageConceptSwitch.StaffNumber:
        return myConceptStaffNumber;
      case LanguageConceptSwitch.StaffType:
        return myConceptStaffType;
      case LanguageConceptSwitch.StaffTypeReference:
        return myConceptStaffTypeReference;
      case LanguageConceptSwitch.SymptomList:
        return myConceptSymptomList;
      case LanguageConceptSwitch.Test:
        return myConceptTest;
      case LanguageConceptSwitch.TestCapturedDisease:
        return myConceptTestCapturedDisease;
      case LanguageConceptSwitch.TestOutcome:
        return myConceptTestOutcome;
      case LanguageConceptSwitch.TestSelectionRule:
        return myConceptTestSelectionRule;
      case LanguageConceptSwitch.TestSelectionRuleLine:
        return myConceptTestSelectionRuleLine;
      case LanguageConceptSwitch.TestSelectionStrategy:
        return myConceptTestSelectionStrategy;
      case LanguageConceptSwitch.TimeDistributionLine:
        return myConceptTimeDistributionLine;
      case LanguageConceptSwitch.TimeDistributionTable:
        return myConceptTimeDistributionTable;
      case LanguageConceptSwitch.TimeOfDayCondition:
        return myConceptTimeOfDayCondition;
      case LanguageConceptSwitch.Unvaccinated:
        return myConceptUnvaccinated;
      case LanguageConceptSwitch.VaccinationStatus:
        return myConceptVaccinationStatus;
      case LanguageConceptSwitch.VaccineStatusCondition:
        return myConceptVaccineStatusCondition;
      case LanguageConceptSwitch.VaccineStatusProperty:
        return myConceptVaccineStatusProperty;
      case LanguageConceptSwitch.Yes:
        return myConceptYes;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationE_Result);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractDurationLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6963522544237717616");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.ActionCardElement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3383707102503528548");
    b.version(2);
    b.property("requiresPatient", 0x3f10eb6deabdc338L).type(PrimitiveTypeId.BOOLEAN).origin("4544390881339097912").done();
    b.property("xPos", 0x749103faecdc6bd7L).type(PrimitiveTypeId.INTEGER).origin("8399499156273261527").done();
    b.property("yPos", 0x749103faecdc6bdaL).type(PrimitiveTypeId.INTEGER).origin("8399499156273261530").done();
    b.property("width", 0x6612fd2de9973faL).type(PrimitiveTypeId.INTEGER).origin("459701219692737530").done();
    b.property("height", 0x6612fd2de9973ffL).type(PrimitiveTypeId.INTEGER).origin("459701219692737535").done();
    b.associate("resource", 0x29f0721df4a9974L).target(0x1a0150acdda54129L, 0x824e01dce96fdea4L, 0x3bf86d07f032c8d7L).optional(true).origin("188877551434373492").done();
    b.associate("timeDistributionTable", 0x4f82e3275d69af14L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb5610e89L).optional(true).origin("5729391434179129108").done();
    b.aggregate("staffTypeReference", 0x4af9c647efdb14f9L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647efda3a80L).optional(false).ordered(true).multiple(false).origin("5402567240276710649").done();
    b.aggregate("duration", 0x60a366dc12abf609L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L).optional(true).ordered(true).multiple(false).origin("6963522544237016585").done();
    b.aggregate("location", 0x3f10eb6deabbd805L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("4544390881338972165").done();
    b.aggregate("orderPatientLocation", 0x348ff1b011050997L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("3787511550143957399").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCard", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06848L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3383707102503528520");
    b.version(2);
    b.property("showDiagramView", 0x7ce22f405c59c5feL).type(PrimitiveTypeId.BOOLEAN).origin("8998806958913471998").done();
    b.property("isSubProcess", 0x4f871b6380a37071L).type(PrimitiveTypeId.BOOLEAN).origin("5730579165026152561").done();
    b.property("isRootActionCard", 0x680587a8325d805aL).type(PrimitiveTypeId.BOOLEAN).origin("7495546311297302618").done();
    b.aggregate("Actions", 0x2ef557ae9cb06877L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L).optional(false).ordered(true).multiple(true).origin("3383707102503528567").done();
    b.aggregate("Branches", 0x2574566374fd2551L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("2698877061866267985").done();
    b.aggregate("UsageCondition", 0x18668ef27386c3a5L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27386cf02L).optional(true).ordered(true).multiple(false).origin("1758249876506198949").done();
    b.aggregate("ActionCardReferences", 0x18668ef27581757bL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(true).origin("1758249876539405691").done();
    b.alias("Action Card");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27386cf02L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876506201858");
    b.version(2);
    b.aggregate("condition", 0x18668ef27386cf03L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL).optional(false).ordered(true).multiple(false).origin("1758249876506201859").done();
    b.alias("Condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardElement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3787511550160215531");
    b.version(2);
    b.aggregate("incomingBranches", 0x348ff1b012835310L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("3787511550169010960").done();
    b.aggregate("outgoingBranches", 0x348ff1b012835312L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("3787511550169010962").done();
    b.alias("action card element");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardReference", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.ActionCardElement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876539396808");
    b.version(2);
    b.associate("actionCard", 0x18668ef2758152f8L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06848L).optional(false).origin("1758249876539396856").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionDurationEmptyLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionDurationEmptyLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12abf608L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6963522544237016584");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionDurationMinutes() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionDurationMinutes", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12ac1225L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6963522544237023781");
    b.version(2);
    b.property("duration", 0x60a366dc12ac1226L).type(PrimitiveTypeId.INTEGER).origin("6963522544237023782").done();
    b.alias("minutes");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAdmissionAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AdmissionAction", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x78ac3095dfdf9aL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/33966321878163354");
    b.version(2);
    b.aggregate("admissionActionCard", 0x2c006337ddf0db18L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(false).origin("3170643229266729752").done();
    b.alias("admission action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AndConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce331f57db6L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.LogicalAndExpression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cbdd39L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342889270710");
    b.version(2);
    b.alias("and");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508940893");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Attribute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab027L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544103");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttributeLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a7cL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061888154236");
    b.version(2);
    b.property("prevalence", 0x5dc1936ab2964870L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("6755843002504464496").done();
    b.aggregate("possibleValue", 0x5dc1936ab296486eL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("6755843002504464494").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttributeTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a60L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061888154208");
    b.version(2);
    b.associate("patientProperty", 0x4813ad0fbaa5f13L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(false).origin("324605317397241619").done();
    b.aggregate("attributeLines", 0x25745663764b1ad2L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a7cL).optional(true).ordered(true).multiple(true).origin("2698877061888154322").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231395");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Branch", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5710949967853733230");
    b.version(2);
    b.property("fromPort", 0x29f0721df719ea5L).type(PrimitiveTypeId.STRING).origin("188877551436930725").done();
    b.property("toPort", 0x29f0721df719ea7L).type(PrimitiveTypeId.STRING).origin("188877551436930727").done();
    b.property("showConditionLabel", 0x2e2517a6a497ddd4L).type(PrimitiveTypeId.BOOLEAN).origin("3325089904376405460").done();
    b.associate("targetAction", 0x4f415ebce3f345b2L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL).optional(true).origin("5710949967853733298").done();
    b.associate("fromAction", 0x29f0721df71afb6L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL).optional(true).origin("188877551436935094").done();
    b.aggregate("condition", 0x2574566374febfecL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL).optional(true).ordered(true).multiple(false).origin("2698877061866373100").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranchConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876441168992");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompositeDiagnosticCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "CompositeDiagnosticCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x19d87264f3d651cfL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1862364223830905295");
    b.version(2);
    b.property("outcome", 0x25745663758ab474L).type(MetaIdFactory.dataTypeId(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab07cL)).origin("1862364223830905298").done();
    b.associate("test", 0x29f0721df37881fL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b87564L).optional(false).origin("1862364223830905296").done();
    b.associate("disease", 0x3f397d5ebb790a0cL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("1862364223830905297").done();
    b.alias("composite diagnostic condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompositeTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "CompositeTest", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b87564L);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.Test", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3866749931154339172");
    b.version(2);
    b.aggregate("testSelectionStrategy", 0x35a9749351b87569L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8756cL).optional(false).ordered(true).multiple(false).origin("3866749931154339177").done();
    b.aggregate("resultsMappingTable", 0x31419b89f2ca8480L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x31419b89f2ca37a8L).optional(false).ordered(true).multiple(false).origin("3549288998130844800").done();
    b.alias("composite test");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompositeTestResultCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "CompositeTestResultCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2c006337dddd52a9L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3170643229265449641");
    b.version(2);
    b.property("outcome", 0x2c006337dddd52aaL).type(MetaIdFactory.dataTypeId(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab07cL)).origin("3170643229265449642").done();
    b.associate("test", 0x2c006337dddd52acL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b87564L).optional(false).origin("3170643229265449644").done();
    b.associate("disease", 0x2c006337dddd52aeL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("3170643229265449646").done();
    b.alias("composite test result condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConditionalLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ConditionalLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x465f14a415e67319L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5070794400417084185");
    b.version(2);
    b.associate("test", 0x465f14a415e6734dL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL).optional(false).origin("5070794400417084237").done();
    b.aggregate("condition", 0x465f14a415e6734bL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("5070794400417084235").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConditionalSelection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ConditionalSelection", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x465f14a415e67306L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.TestSelectionStrategy", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8756cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5070794400417084166");
    b.version(2);
    b.aggregate("lines", 0x465f14a415e67362L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x465f14a415e67319L).optional(true).ordered(true).multiple(true).origin("5070794400417084258").done();
    b.alias("conditional distribution");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConditonalStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ConditonalStatement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.interface_();
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342891532506");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDiagnosticCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DiagnosticCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x29f0721df36170cL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/188877551433029388");
    b.version(2);
    b.property("outcome", 0x25745663758ab474L).type(MetaIdFactory.dataTypeId(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab07cL)).origin("2698877061875545204").done();
    b.associate("test", 0x29f0721df37881fL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL).optional(false).origin("188877551433123871").done();
    b.associate("disease", 0x3f397d5ebb790a0cL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("4555810343887637004").done();
    b.alias("diagnostic condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDischargeAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DischargeAction", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2756fb14cL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876538241356");
    b.version(2);
    b.alias("discharge action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDiseaseTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DiseaseTest", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4936c0ffc391ca7L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/329726013640088743");
    b.version(2);
    b.property("sensitivity", 0x31419b89f22801d0L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("3549288998120194512").done();
    b.property("specificity", 0x31419b89f22801d2L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("3549288998120194514").done();
    b.associate("disease", 0x31419b89f22801cbL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("3549288998120194507").done();
    b.aggregate("possibleOutcomes", 0x31419b89f22801d5L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x19d87264f3d59728L).optional(false).ordered(true).multiple(true).origin("3549288998120194517").done();
    b.alias("disease test");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEDScenario() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "EDScenario", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647eff82e56L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5402567240278617686");
    b.version(2);
    b.property("runDuration", 0x4f82e3275d8c14dcL).type(PrimitiveTypeId.INTEGER).origin("5729391434181383388").done();
    b.property("secondsPerTick", 0x7ce22f405c238da3L).type(PrimitiveTypeId.INTEGER).origin("8998806958909918627").done();
    b.property("simulation_repetitions", 0x348944a9af13c43cL).type(PrimitiveTypeId.INTEGER).origin("3785632457359082556").done();
    b.aggregate("staffNumbers", 0x4af9c647eff82ea4L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647eff82e7bL).optional(true).ordered(true).multiple(true).origin("5402567240278617764").done();
    b.aggregate("primaryActionCard", 0x680587a8331f69b7L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(false).origin("7495546311310010807").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElectiveAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ElectiveAttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09e71L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508941937");
    b.version(2);
    b.alias("Elective attendance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmergencyAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "EmergencyAttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09c56L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508941398");
    b.version(2);
    b.alias("Emergency Attendance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFullyVaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "FullyVaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61137L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238711");
    b.version(2);
    b.alias("fully vaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPatientProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "IPatientProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.interface_();
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434336588");
    b.version(2);
    b.property("name", 0x18668ef270f3bdacL).type(PrimitiveTypeId.STRING).origin("1758249876463009196").done();
    b.aggregate("possibleValues", 0x18668ef26f407627L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(true).ordered(true).multiple(true).origin("1758249876434482727").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPatientPropertyValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "IPatientPropertyValue", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.interface_();
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3794530329743162156");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImmunocompromisedCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ImmunocompromisedCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2755ea288L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876537123464");
    b.version(2);
    b.alias("check if patient is immuno-compromised");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImmunosuppressedProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ImmunosuppressedProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2755e811eL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876537114910");
    b.version(2);
    b.alias("ImmunoCompromised");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfectionStatusCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "InfectionStatusCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27101e2faL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876463936250");
    b.version(2);
    b.alias("check infection status of a patient");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfectionStatusProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "InfectionStatusProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e7089L);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434350217");
    b.version(2);
    b.associate("disease", 0x18668ef26f40918bL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("1758249876434489739").done();
    b.alias("Infection Status");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocationCapacityCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "LocationCapacityCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4ab0a0c760d991ecL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5381978332891550188");
    b.version(2);
    b.property("minCapacity", 0x4ab0a0c760d99264L).type(PrimitiveTypeId.INTEGER).origin("5381978332891550308").done();
    b.aggregate("location", 0x4ab0a0c760d9922cL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("5381978332891550252").done();
    b.alias("Check capacity of a room");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "No", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e4L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231396");
    b.version(2);
    b.alias("No");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObservationTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ObservationTest", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db47911a7L);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.Test", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265630119");
    b.version(2);
    b.aggregate("SymptomReference", 0x6ca3e29db47912c5L).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x6ca3e29db4791247L).optional(true).ordered(true).multiple(true).origin("7828349744265630405").done();
    b.alias("observation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObservationsCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ObservationsCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4926ae3L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744267291363");
    b.version(2);
    b.property("outcome", 0x6ca3e29db4926b23L).type(MetaIdFactory.dataTypeId(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab07cL)).origin("7828349744267291427").done();
    b.associate("test", 0x6ca3e29db4926b37L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db47911a7L).optional(true).origin("7828349744267291447").done();
    b.alias("observations result");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "OrConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce33209e2aeL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.LogicalOrExpression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cbdcbbL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342890607278");
    b.version(2);
    b.alias("or");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPartiallyVaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PartiallyVaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61154L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238740");
    b.version(2);
    b.alias("partially vaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientArrivalLine_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientArrivalLine_old", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x27ebd2392beaa324L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2876623929997959972");
    b.version(2);
    b.property("Time_old", 0x27ebd2392beaa32eL).type(PrimitiveTypeId.INTEGER).origin("2876623929997959982").done();
    b.property("NumPatientsInHour_old", 0x27ebd2392beaa330L).type(PrimitiveTypeId.INTEGER).origin("2876623929997959984").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientArrivals_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientArrivals_old", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x637eade0e62ce2b8L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7169358838266389176");
    b.version(2);
    b.aggregate("PatientArrivalLines_old", 0x27ebd2392beaa3d1L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x27ebd2392beaa324L).optional(true).ordered(true).multiple(true).origin("2876623929997960145").done();
    b.aggregate("ArrivalLocation_old", 0xaabf015bf63b5d0L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("768972137592763856").done();
    b.alias("Patient Arrivals");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientCohortCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientCohortCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce330f1825aL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342872232538");
    b.version(2);
    b.associate("cohort", 0x74711ce330f1825dL).target(0x2fa21111132744d6L, 0x9000fd96b15fb9b6L, 0xaabf015be947306L).optional(false).origin("8390519342872232541").done();
    b.alias("Check patient cohort");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientProfile_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientProfile_old", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0xaabf015be947306L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/768972137579180806");
    b.version(2);
    b.aggregate("attributes_old", 0xaabf015be951259L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a60L).optional(true).ordered(true).multiple(true).origin("768972137579221593").done();
    b.aggregate("arrivalRate_old", 0xaabf015be951280L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x637eade0e62ce2b8L).optional(true).ordered(true).multiple(false).origin("768972137579221632").done();
    b.aggregate("attendanceRoute_old", 0x18668ef2739f49dfL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL).optional(true).ordered(true).multiple(false).origin("1758249876507806175").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientPropertyConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876462569833");
    b.version(2);
    b.associate("patientProperty", 0x18668ef27115ff2aL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(false).origin("1758249876465254186").done();
    b.aggregate("checkValue", 0x18668ef270ed0a03L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("1758249876462569987").done();
    b.alias("patient property");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798464301");
    b.version(2);
    b.alias("patient severity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverityProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverityProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524d47fL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798455935");
    b.version(2);
    b.alias("Patient Severity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverity_Low() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverity_Low", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23525027bL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798467707");
    b.version(2);
    b.alias("low");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverity_Severe() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverity_Severe", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f37eL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798463870");
    b.version(2);
    b.alias("severe");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatient_Severity_Moderate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Patient_Severity_Moderate", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524ff6bL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798466923");
    b.version(2);
    b.alias("moderate");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatient_old() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Patient_old", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4813ad0fbaa52b3L);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.Person", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x578a9c104f25dbfL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/324605317397238451");
    b.version(2);
    b.aggregate("patientProperty_old", 0x4813ad0fbaa52bdL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(true).ordered(true).multiple(true).origin("324605317397238461").done();
    b.alias("patient");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPerson() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Person", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x578a9c104f25dbfL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/394251613871693247");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProbabilityCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProbabilityCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4813ad0fc64c280L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/324605317409456768");
    b.version(2);
    b.property("probabilityChance", 0x4813ad0fc64c2aeL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("324605317409456814").done();
    b.alias("probability");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProbabilityDistribution() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProbabilityDistribution", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8eff3L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.TestSelectionStrategy", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8756cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3866749931154370547");
    b.version(2);
    b.aggregate("lines", 0x35a9749351b8f06aL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8f00eL).optional(true).ordered(true).multiple(true).origin("3866749931154370666").done();
    b.alias("probability distribution");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProbabilityDistributionLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProbabilityDistributionLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8f00eL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3866749931154370574");
    b.version(2);
    b.property("probability", 0x35a9749351b8f00fL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("3866749931154370575").done();
    b.associate("test", 0x35a9749351b8f081L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL).optional(false).origin("3866749931154370689").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessingTimeLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProcessingTimeLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0ee1aL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1645043697875742234");
    b.version(2);
    b.property("Time", 0x16d45e8703e0ee36L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("1645043697875742262").done();
    b.property("Occurances", 0x16d45e8703e0ee38L).type(PrimitiveTypeId.INTEGER).origin("1645043697875742264").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessingTimeTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProcessingTimeTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0edf5L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1645043697875742197");
    b.version(2);
    b.aggregate("ProcessingTimeLines", 0x16d45e8703e0ee61L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0ee1aL).optional(true).ordered(true).multiple(true).origin("1645043697875742305").done();
    b.alias("Test processing time table");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRecentCOVIDContactCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RecentCOVIDContactCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bde64L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500242020");
    b.version(2);
    b.alias("check if patient had a recent COVID contact");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRecentCovidContactProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RecentCovidContactProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732b9054L);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500222036");
    b.version(2);
    b.alias("Recent COVID contact");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResourceAvailableCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ResourceAvailableCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x3bf86d07f23cf033L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4321323723358269491");
    b.version(2);
    b.aggregate("availabilityExpression", 0x3bf86d07f260cb7eL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("4321323723360619390").done();
    b.alias("resource availability condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResultsMappingLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ResultsMappingLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x31419b89f2ca37faL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3549288998130825210");
    b.version(2);
    b.associate("Disease", 0x31419b89f2ca381fL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("3549288998130825247").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResultsMappingTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ResultsMappingTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x31419b89f2ca37a8L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3549288998130825128");
    b.version(2);
    b.aggregate("lines", 0x31419b89f2ca38e7L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x31419b89f2ca37faL).optional(true).ordered(true).multiple(true).origin("3549288998130825447").done();
    b.alias("results mapping table");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomSelectionCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d154aeL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035352238");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomSelectionLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d0be74L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035313780");
    b.version(2);
    b.aggregate("condition", 0x43b5616bd1d0e19bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("4878912887035322779").done();
    b.aggregate("rule", 0x43b5616bd1d0e19dL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x334005c766547220L).optional(false).ordered(true).multiple(false).origin("4878912887035322781").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomSelectionRule", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x334005c766547220L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3692958048417247776");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomTypeCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomTypeCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d154adL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035352237");
    b.version(2);
    b.aggregate("AllowedRooms", 0x43b5616bd1d158adL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(true).origin("4878912887035353261").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectEmptyRoom() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "SelectEmptyRoom", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d0fb3bL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.RoomSelectionRule", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x334005c766547220L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035329339");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaffNumber() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "StaffNumber", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647eff82e7bL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5402567240278617723");
    b.version(2);
    b.property("number", 0x4af9c647eff82e85L).type(PrimitiveTypeId.INTEGER).origin("5402567240278617733").done();
    b.associate("staff", 0x4af9c647eff82e87L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f346ecL).optional(false).origin("5402567240278617735").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaffType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "StaffType", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f346ecL);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.Person", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x578a9c104f25dbfL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5710949967853733612");
    b.version(2);
    b.property("patientLimit", 0x4813ad0fb6a0ffeL).type(PrimitiveTypeId.INTEGER).origin("324605317393027070").done();
    b.property("colour", 0x1c9634cb480ad257L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x66029deba11b7155L)).origin("2059891927260254807").done();
    b.aggregate("idleLocation", 0x3dab4295af0d021eL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("4443718667985551902").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaffTypeReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "StaffTypeReference", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647efda3a80L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5402567240276654720");
    b.version(2);
    b.associate("staffType", 0x4af9c647efda3aa5L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f346ecL).optional(false).origin("5402567240276654757").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSymptomList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "SymptomList", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db47911f9L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265630201");
    b.version(2);
    b.aggregate("symptoms", 0x6ca3e29db4791203L).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x6ca3e29db4791132L).optional(true).ordered(true).multiple(true).origin("7828349744265630211").done();
    b.alias("Complete list of Symptoms");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Test", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL);
    b.class_(false, false, true);
    b.super_("BuiltEnvironment.structure.Resource", 0x1a0150acdda54129L, 0x824e01dce96fdea4L, 0x3bf86d07f032c8d7L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265634127");
    b.version(2);
    b.aggregate("ProcessingTimeTable", 0x6ca3e29db4792188L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0edf5L).optional(true).ordered(true).multiple(false).origin("7828349744265634184").done();
    b.aggregate("TestingProcess", 0x348ff1b011d7b149L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(false).origin("3787511550157762889").done();
    b.aggregate("Captures", 0x31419b89f22801c7L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4936c0ffc391ca7L).optional(true).ordered(true).multiple(true).origin("3549288998120194503").done();
    b.alias("test");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestCapturedDisease() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TestCapturedDisease", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x549fe0474671cd38L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Attribute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab027L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6097839017212103992");
    b.version(2);
    b.property("Sensitivity", 0x549fe0474671cd6fL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("6097839017212104047").done();
    b.property("Specificity", 0x549fe0474671cd70L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("6097839017212104048").done();
    b.associate("disease", 0x549fe0474671cd85L).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("6097839017212104069").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestOutcome() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TestOutcome", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x19d87264f3d59728L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1862364223830857512");
    b.version(2);
    b.property("outcome", 0x31419b89f22801d9L).type(MetaIdFactory.dataTypeId(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab07cL)).origin("3549288998120194521").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestSelectionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TestSelectionRule", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b87572L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3866749931154339186");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestSelectionRuleLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TestSelectionRuleLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8756dL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3866749931154339181");
    b.version(2);
    b.aggregate("rule", 0x35a9749351b87570L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b87572L).optional(false).ordered(true).multiple(false).origin("3866749931154339184").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestSelectionStrategy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TestSelectionStrategy", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x35a9749351b8756cL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3866749931154339180");
    b.version(2);
    b.alias("test selection strategy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeDistributionLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TimeDistributionLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x20b46d627ba89adL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/147289298423155117");
    b.version(2);
    b.property("Time", 0x20b46d627ba89aeL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("147289298423155118").done();
    b.property("Occurances", 0x20b46d627ba89b0L).type(PrimitiveTypeId.INTEGER).origin("147289298423155120").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeDistributionTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TimeDistributionTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x20b46d627ba89aaL);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/147289298423155114");
    b.version(2);
    b.aggregate("timeLines", 0x20b46d627ba89abL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x20b46d627ba89adL).optional(true).ordered(true).multiple(true).origin("147289298423155115").done();
    b.alias("Time distribution table");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeOfDayCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TimeOfDayCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x3bf86d07f418f43dL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4321323723389465661");
    b.version(2);
    b.aggregate("expression", 0x3bf86d07f4a23f68L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("4321323723398463336").done();
    b.alias("time of day condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnvaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Unvaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61167L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238759");
    b.version(2);
    b.alias("Unvaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccinationStatus() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238721");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccineStatusCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccineStatusCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f431e45L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434656837");
    b.version(2);
    b.alias("check vaccine status of patient");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccineStatusProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccineStatusProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f40915dL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434489693");
    b.version(2);
    b.associate("disease", 0x18668ef26f40bdfaL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("1758249876434501114").done();
    b.alias("Vaccine status");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForYes() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Yes", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e2L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231394");
    b.version(2);
    b.alias("Yes");
    return b.create();
  }
}

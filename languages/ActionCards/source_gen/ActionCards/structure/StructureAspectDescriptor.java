package ActionCards.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractDurationLine = createDescriptorForAbstractDurationLine();
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActionCard = createDescriptorForActionCard();
  /*package*/ final ConceptDescriptor myConceptActionCardCondition = createDescriptorForActionCardCondition();
  /*package*/ final ConceptDescriptor myConceptActionCardElement = createDescriptorForActionCardElement();
  /*package*/ final ConceptDescriptor myConceptActionCardReference = createDescriptorForActionCardReference();
  /*package*/ final ConceptDescriptor myConceptActionDurationEmptyLine = createDescriptorForActionDurationEmptyLine();
  /*package*/ final ConceptDescriptor myConceptActionDurationMinutes = createDescriptorForActionDurationMinutes();
  /*package*/ final ConceptDescriptor myConceptAdmissionAction = createDescriptorForAdmissionAction();
  /*package*/ final ConceptDescriptor myConceptAndConditional = createDescriptorForAndConditional();
  /*package*/ final ConceptDescriptor myConceptAttendanceRoute = createDescriptorForAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptAttributeLine = createDescriptorForAttributeLine();
  /*package*/ final ConceptDescriptor myConceptAttributeTable = createDescriptorForAttributeTable();
  /*package*/ final ConceptDescriptor myConceptBooleanExpression = createDescriptorForBooleanExpression();
  /*package*/ final ConceptDescriptor myConceptBranch = createDescriptorForBranch();
  /*package*/ final ConceptDescriptor myConceptBranchConditional = createDescriptorForBranchConditional();
  /*package*/ final ConceptDescriptor myConceptConditonalStatement = createDescriptorForConditonalStatement();
  /*package*/ final ConceptDescriptor myConceptDischargeAction = createDescriptorForDischargeAction();
  /*package*/ final ConceptDescriptor myConceptEDScenario = createDescriptorForEDScenario();
  /*package*/ final ConceptDescriptor myConceptElectiveAttendanceRoute = createDescriptorForElectiveAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptEmergencyAttendanceRoute = createDescriptorForEmergencyAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptFullyVaccinated = createDescriptorForFullyVaccinated();
  /*package*/ final ConceptDescriptor myConceptIPatientProperty = createDescriptorForIPatientProperty();
  /*package*/ final ConceptDescriptor myConceptIPatientPropertyValue = createDescriptorForIPatientPropertyValue();
  /*package*/ final ConceptDescriptor myConceptImmunosuppressedProperty = createDescriptorForImmunosuppressedProperty();
  /*package*/ final ConceptDescriptor myConceptInfectionStatusProperty = createDescriptorForInfectionStatusProperty();
  /*package*/ final ConceptDescriptor myConceptLocationCapacityCondition = createDescriptorForLocationCapacityCondition();
  /*package*/ final ConceptDescriptor myConceptNo = createDescriptorForNo();
  /*package*/ final ConceptDescriptor myConceptOrConditional = createDescriptorForOrConditional();
  /*package*/ final ConceptDescriptor myConceptPartiallyVaccinated = createDescriptorForPartiallyVaccinated();
  /*package*/ final ConceptDescriptor myConceptPatientCohortCondition = createDescriptorForPatientCohortCondition();
  /*package*/ final ConceptDescriptor myConceptPatientPropertyConditional = createDescriptorForPatientPropertyConditional();
  /*package*/ final ConceptDescriptor myConceptPatientSeverity = createDescriptorForPatientSeverity();
  /*package*/ final ConceptDescriptor myConceptPatientSeverityProperty = createDescriptorForPatientSeverityProperty();
  /*package*/ final ConceptDescriptor myConceptPatientSeverity_Low = createDescriptorForPatientSeverity_Low();
  /*package*/ final ConceptDescriptor myConceptPatientSeverity_Severe = createDescriptorForPatientSeverity_Severe();
  /*package*/ final ConceptDescriptor myConceptPatient_Severity_Moderate = createDescriptorForPatient_Severity_Moderate();
  /*package*/ final ConceptDescriptor myConceptProbabilityCondition = createDescriptorForProbabilityCondition();
  /*package*/ final ConceptDescriptor myConceptRecentCovidContactProperty = createDescriptorForRecentCovidContactProperty();
  /*package*/ final ConceptDescriptor myConceptResourceAvailableCondition = createDescriptorForResourceAvailableCondition();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionCondition = createDescriptorForRoomSelectionCondition();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionLine = createDescriptorForRoomSelectionLine();
  /*package*/ final ConceptDescriptor myConceptRoomSelectionRule = createDescriptorForRoomSelectionRule();
  /*package*/ final ConceptDescriptor myConceptRoomTypeCondition = createDescriptorForRoomTypeCondition();
  /*package*/ final ConceptDescriptor myConceptSelectEmptyRoom = createDescriptorForSelectEmptyRoom();
  /*package*/ final ConceptDescriptor myConceptSymptomList = createDescriptorForSymptomList();
  /*package*/ final ConceptDescriptor myConceptTimeDistributionLine = createDescriptorForTimeDistributionLine();
  /*package*/ final ConceptDescriptor myConceptTimeDistributionTable = createDescriptorForTimeDistributionTable();
  /*package*/ final ConceptDescriptor myConceptTimeOfDayCondition = createDescriptorForTimeOfDayCondition();
  /*package*/ final ConceptDescriptor myConceptUnvaccinated = createDescriptorForUnvaccinated();
  /*package*/ final ConceptDescriptor myConceptVaccinationStatus = createDescriptorForVaccinationStatus();
  /*package*/ final ConceptDescriptor myConceptVaccineStatusProperty = createDescriptorForVaccineStatusProperty();
  /*package*/ final ConceptDescriptor myConceptYes = createDescriptorForYes();
  /*package*/ final EnumerationDescriptor myEnumerationE_Result = new EnumerationDescriptor_E_Result();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.aggregatedLanguage(0x2fa21111132744d6L, 0x9000fd96b15fb9b6L, "PatientLanguage");
    deps.aggregatedLanguage(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, "AgentLanguage");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.aggregatedLanguage(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, "DiseaseModel");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractDurationLine, myConceptAction, myConceptActionCard, myConceptActionCardCondition, myConceptActionCardElement, myConceptActionCardReference, myConceptActionDurationEmptyLine, myConceptActionDurationMinutes, myConceptAdmissionAction, myConceptAndConditional, myConceptAttendanceRoute, myConceptAttribute, myConceptAttributeLine, myConceptAttributeTable, myConceptBooleanExpression, myConceptBranch, myConceptBranchConditional, myConceptConditonalStatement, myConceptDischargeAction, myConceptEDScenario, myConceptElectiveAttendanceRoute, myConceptEmergencyAttendanceRoute, myConceptFullyVaccinated, myConceptIPatientProperty, myConceptIPatientPropertyValue, myConceptImmunosuppressedProperty, myConceptInfectionStatusProperty, myConceptLocationCapacityCondition, myConceptNo, myConceptOrConditional, myConceptPartiallyVaccinated, myConceptPatientCohortCondition, myConceptPatientPropertyConditional, myConceptPatientSeverity, myConceptPatientSeverityProperty, myConceptPatientSeverity_Low, myConceptPatientSeverity_Severe, myConceptPatient_Severity_Moderate, myConceptProbabilityCondition, myConceptRecentCovidContactProperty, myConceptResourceAvailableCondition, myConceptRoomSelectionCondition, myConceptRoomSelectionLine, myConceptRoomSelectionRule, myConceptRoomTypeCondition, myConceptSelectEmptyRoom, myConceptSymptomList, myConceptTimeDistributionLine, myConceptTimeDistributionTable, myConceptTimeOfDayCondition, myConceptUnvaccinated, myConceptVaccinationStatus, myConceptVaccineStatusProperty, myConceptYes);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractDurationLine:
        return myConceptAbstractDurationLine;
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.ActionCard:
        return myConceptActionCard;
      case LanguageConceptSwitch.ActionCardCondition:
        return myConceptActionCardCondition;
      case LanguageConceptSwitch.ActionCardElement:
        return myConceptActionCardElement;
      case LanguageConceptSwitch.ActionCardReference:
        return myConceptActionCardReference;
      case LanguageConceptSwitch.ActionDurationEmptyLine:
        return myConceptActionDurationEmptyLine;
      case LanguageConceptSwitch.ActionDurationMinutes:
        return myConceptActionDurationMinutes;
      case LanguageConceptSwitch.AdmissionAction:
        return myConceptAdmissionAction;
      case LanguageConceptSwitch.AndConditional:
        return myConceptAndConditional;
      case LanguageConceptSwitch.AttendanceRoute:
        return myConceptAttendanceRoute;
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.AttributeLine:
        return myConceptAttributeLine;
      case LanguageConceptSwitch.AttributeTable:
        return myConceptAttributeTable;
      case LanguageConceptSwitch.BooleanExpression:
        return myConceptBooleanExpression;
      case LanguageConceptSwitch.Branch:
        return myConceptBranch;
      case LanguageConceptSwitch.BranchConditional:
        return myConceptBranchConditional;
      case LanguageConceptSwitch.ConditonalStatement:
        return myConceptConditonalStatement;
      case LanguageConceptSwitch.DischargeAction:
        return myConceptDischargeAction;
      case LanguageConceptSwitch.EDScenario:
        return myConceptEDScenario;
      case LanguageConceptSwitch.ElectiveAttendanceRoute:
        return myConceptElectiveAttendanceRoute;
      case LanguageConceptSwitch.EmergencyAttendanceRoute:
        return myConceptEmergencyAttendanceRoute;
      case LanguageConceptSwitch.FullyVaccinated:
        return myConceptFullyVaccinated;
      case LanguageConceptSwitch.IPatientProperty:
        return myConceptIPatientProperty;
      case LanguageConceptSwitch.IPatientPropertyValue:
        return myConceptIPatientPropertyValue;
      case LanguageConceptSwitch.ImmunosuppressedProperty:
        return myConceptImmunosuppressedProperty;
      case LanguageConceptSwitch.InfectionStatusProperty:
        return myConceptInfectionStatusProperty;
      case LanguageConceptSwitch.LocationCapacityCondition:
        return myConceptLocationCapacityCondition;
      case LanguageConceptSwitch.No:
        return myConceptNo;
      case LanguageConceptSwitch.OrConditional:
        return myConceptOrConditional;
      case LanguageConceptSwitch.PartiallyVaccinated:
        return myConceptPartiallyVaccinated;
      case LanguageConceptSwitch.PatientCohortCondition:
        return myConceptPatientCohortCondition;
      case LanguageConceptSwitch.PatientPropertyConditional:
        return myConceptPatientPropertyConditional;
      case LanguageConceptSwitch.PatientSeverity:
        return myConceptPatientSeverity;
      case LanguageConceptSwitch.PatientSeverityProperty:
        return myConceptPatientSeverityProperty;
      case LanguageConceptSwitch.PatientSeverity_Low:
        return myConceptPatientSeverity_Low;
      case LanguageConceptSwitch.PatientSeverity_Severe:
        return myConceptPatientSeverity_Severe;
      case LanguageConceptSwitch.Patient_Severity_Moderate:
        return myConceptPatient_Severity_Moderate;
      case LanguageConceptSwitch.ProbabilityCondition:
        return myConceptProbabilityCondition;
      case LanguageConceptSwitch.RecentCovidContactProperty:
        return myConceptRecentCovidContactProperty;
      case LanguageConceptSwitch.ResourceAvailableCondition:
        return myConceptResourceAvailableCondition;
      case LanguageConceptSwitch.RoomSelectionCondition:
        return myConceptRoomSelectionCondition;
      case LanguageConceptSwitch.RoomSelectionLine:
        return myConceptRoomSelectionLine;
      case LanguageConceptSwitch.RoomSelectionRule:
        return myConceptRoomSelectionRule;
      case LanguageConceptSwitch.RoomTypeCondition:
        return myConceptRoomTypeCondition;
      case LanguageConceptSwitch.SelectEmptyRoom:
        return myConceptSelectEmptyRoom;
      case LanguageConceptSwitch.SymptomList:
        return myConceptSymptomList;
      case LanguageConceptSwitch.TimeDistributionLine:
        return myConceptTimeDistributionLine;
      case LanguageConceptSwitch.TimeDistributionTable:
        return myConceptTimeDistributionTable;
      case LanguageConceptSwitch.TimeOfDayCondition:
        return myConceptTimeOfDayCondition;
      case LanguageConceptSwitch.Unvaccinated:
        return myConceptUnvaccinated;
      case LanguageConceptSwitch.VaccinationStatus:
        return myConceptVaccinationStatus;
      case LanguageConceptSwitch.VaccineStatusProperty:
        return myConceptVaccineStatusProperty;
      case LanguageConceptSwitch.Yes:
        return myConceptYes;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationE_Result);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractDurationLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6963522544237717616");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.ActionCardElement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3383707102503528548");
    b.version(2);
    b.property("requiresPatient", 0x3f10eb6deabdc338L).type(PrimitiveTypeId.BOOLEAN).origin("4544390881339097912").done();
    b.property("xPos", 0x749103faecdc6bd7L).type(PrimitiveTypeId.INTEGER).origin("8399499156273261527").done();
    b.property("yPos", 0x749103faecdc6bdaL).type(PrimitiveTypeId.INTEGER).origin("8399499156273261530").done();
    b.property("width", 0x6612fd2de9973faL).type(PrimitiveTypeId.INTEGER).origin("459701219692737530").done();
    b.property("height", 0x6612fd2de9973ffL).type(PrimitiveTypeId.INTEGER).origin("459701219692737535").done();
    b.associate("resource", 0x29f0721df4a9974L).target(0x1a0150acdda54129L, 0x824e01dce96fdea4L, 0x3bf86d07f032c8d7L).optional(true).origin("188877551434373492").done();
    b.associate("timeDistributionTable", 0x4f82e3275d69af14L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb5610e89L).optional(true).origin("5729391434179129108").done();
    b.aggregate("staffTypeReference", 0x4af9c647efdb14f9L).target(0x2fa21111132744d6L, 0x9000fd96b15fb9b6L, 0x4af9c647efda3a80L).optional(false).ordered(true).multiple(false).origin("5402567240276710649").done();
    b.aggregate("duration", 0x60a366dc12abf609L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L).optional(true).ordered(true).multiple(false).origin("6963522544237016585").done();
    b.aggregate("location", 0x3f10eb6deabbd805L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("4544390881338972165").done();
    b.aggregate("orderPatientLocation", 0x348ff1b011050997L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("3787511550143957399").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCard", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06848L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3383707102503528520");
    b.version(2);
    b.property("showDiagramView", 0x7ce22f405c59c5feL).type(PrimitiveTypeId.BOOLEAN).origin("8998806958913471998").done();
    b.property("isSubProcess", 0x4f871b6380a37071L).type(PrimitiveTypeId.BOOLEAN).origin("5730579165026152561").done();
    b.property("isRootActionCard", 0x680587a8325d805aL).type(PrimitiveTypeId.BOOLEAN).origin("7495546311297302618").done();
    b.aggregate("Actions", 0x2ef557ae9cb06877L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L).optional(false).ordered(true).multiple(true).origin("3383707102503528567").done();
    b.aggregate("Branches", 0x2574566374fd2551L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("2698877061866267985").done();
    b.aggregate("UsageCondition", 0x18668ef27386c3a5L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27386cf02L).optional(true).ordered(true).multiple(false).origin("1758249876506198949").done();
    b.aggregate("ActionCardReferences", 0x18668ef27581757bL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(true).origin("1758249876539405691").done();
    b.alias("Action Card");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27386cf02L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876506201858");
    b.version(2);
    b.aggregate("condition", 0x18668ef27386cf03L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL).optional(false).ordered(true).multiple(false).origin("1758249876506201859").done();
    b.alias("Condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardElement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3787511550160215531");
    b.version(2);
    b.aggregate("incomingBranches", 0x348ff1b012835310L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("3787511550169010960").done();
    b.aggregate("outgoingBranches", 0x348ff1b012835312L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("3787511550169010962").done();
    b.alias("action card element");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardReference", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.ActionCardElement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876539396808");
    b.version(2);
    b.associate("actionCard", 0x18668ef2758152f8L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06848L).optional(false).origin("1758249876539396856").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionDurationEmptyLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionDurationEmptyLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12abf608L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6963522544237016584");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionDurationMinutes() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionDurationMinutes", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12ac1225L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6963522544237023781");
    b.version(2);
    b.property("duration", 0x60a366dc12ac1226L).type(PrimitiveTypeId.INTEGER).origin("6963522544237023782").done();
    b.alias("minutes");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAdmissionAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AdmissionAction", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x78ac3095dfdf9aL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/33966321878163354");
    b.version(2);
    b.aggregate("admissionActionCard", 0x2c006337ddf0db18L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(false).origin("3170643229266729752").done();
    b.alias("admission action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AndConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce331f57db6L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.LogicalAndExpression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cbdd39L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342889270710");
    b.version(2);
    b.alias("and");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508940893");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Attribute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab027L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544103");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttributeLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a7cL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061888154236");
    b.version(2);
    b.property("prevalence", 0x5dc1936ab2964870L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("6755843002504464496").done();
    b.aggregate("possibleValue", 0x5dc1936ab296486eL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("6755843002504464494").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttributeTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a60L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061888154208");
    b.version(2);
    b.associate("patientProperty", 0x4813ad0fbaa5f13L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(false).origin("324605317397241619").done();
    b.aggregate("attributeLines", 0x25745663764b1ad2L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a7cL).optional(true).ordered(true).multiple(true).origin("2698877061888154322").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231395");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Branch", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5710949967853733230");
    b.version(2);
    b.property("fromPort", 0x29f0721df719ea5L).type(PrimitiveTypeId.STRING).origin("188877551436930725").done();
    b.property("toPort", 0x29f0721df719ea7L).type(PrimitiveTypeId.STRING).origin("188877551436930727").done();
    b.property("showConditionLabel", 0x2e2517a6a497ddd4L).type(PrimitiveTypeId.BOOLEAN).origin("3325089904376405460").done();
    b.associate("targetAction", 0x4f415ebce3f345b2L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL).optional(true).origin("5710949967853733298").done();
    b.associate("fromAction", 0x29f0721df71afb6L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x348ff1b011fd1debL).optional(true).origin("188877551436935094").done();
    b.aggregate("condition", 0x2574566374febfecL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL).optional(true).ordered(true).multiple(false).origin("2698877061866373100").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranchConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876441168992");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConditonalStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ConditonalStatement", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.interface_();
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342891532506");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDischargeAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DischargeAction", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2756fb14cL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876538241356");
    b.version(2);
    b.alias("discharge action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEDScenario() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "EDScenario", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647eff82e56L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5402567240278617686");
    b.version(2);
    b.property("runDuration", 0x4f82e3275d8c14dcL).type(PrimitiveTypeId.INTEGER).origin("5729391434181383388").done();
    b.property("secondsPerTick", 0x7ce22f405c238da3L).type(PrimitiveTypeId.INTEGER).origin("8998806958909918627").done();
    b.property("simulation_repetitions", 0x348944a9af13c43cL).type(PrimitiveTypeId.INTEGER).origin("3785632457359082556").done();
    b.aggregate("staffNumbers", 0x4af9c647eff82ea4L).target(0x2fa21111132744d6L, 0x9000fd96b15fb9b6L, 0x4af9c647eff82e7bL).optional(true).ordered(true).multiple(true).origin("5402567240278617764").done();
    b.aggregate("primaryActionCard", 0x680587a8331f69b7L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(false).origin("7495546311310010807").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElectiveAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ElectiveAttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09e71L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508941937");
    b.version(2);
    b.alias("Elective attendance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmergencyAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "EmergencyAttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09c56L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508941398");
    b.version(2);
    b.alias("Emergency Attendance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFullyVaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "FullyVaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61137L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238711");
    b.version(2);
    b.alias("fully vaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPatientProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "IPatientProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.interface_();
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434336588");
    b.version(2);
    b.property("name", 0x18668ef270f3bdacL).type(PrimitiveTypeId.STRING).origin("1758249876463009196").done();
    b.aggregate("possibleValues", 0x18668ef26f407627L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(true).ordered(true).multiple(true).origin("1758249876434482727").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPatientPropertyValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "IPatientPropertyValue", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.interface_();
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3794530329743162156");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImmunosuppressedProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ImmunosuppressedProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2755e811eL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876537114910");
    b.version(2);
    b.alias("ImmunoCompromised");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfectionStatusProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "InfectionStatusProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e7089L);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434350217");
    b.version(2);
    b.associate("disease", 0x18668ef26f40918bL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("1758249876434489739").done();
    b.alias("Infection Status");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocationCapacityCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "LocationCapacityCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4ab0a0c760d991ecL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5381978332891550188");
    b.version(2);
    b.property("minCapacity", 0x4ab0a0c760d99264L).type(PrimitiveTypeId.INTEGER).origin("5381978332891550308").done();
    b.aggregate("location", 0x4ab0a0c760d9922cL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("5381978332891550252").done();
    b.alias("Check capacity of a room");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "No", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e4L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231396");
    b.version(2);
    b.alias("No");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "OrConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce33209e2aeL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.LogicalOrExpression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cbdcbbL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342890607278");
    b.version(2);
    b.alias("or");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPartiallyVaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PartiallyVaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61154L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238740");
    b.version(2);
    b.alias("partially vaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientCohortCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientCohortCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce330f1825aL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/8390519342872232538");
    b.version(2);
    b.associate("cohort", 0x74711ce330f1825dL).target(0x2fa21111132744d6L, 0x9000fd96b15fb9b6L, 0xaabf015be947306L).optional(false).origin("8390519342872232541").done();
    b.alias("Check patient cohort");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientPropertyConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876462569833");
    b.version(2);
    b.associate("patientProperty", 0x18668ef27115ff2aL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(false).origin("1758249876465254186").done();
    b.aggregate("checkValue", 0x18668ef270ed0a03L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("1758249876462569987").done();
    b.alias("check patient's condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798464301");
    b.version(2);
    b.alias("patient severity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverityProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverityProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524d47fL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798455935");
    b.version(2);
    b.alias("Patient Severity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverity_Low() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverity_Low", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23525027bL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798467707");
    b.version(2);
    b.alias("low");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientSeverity_Severe() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientSeverity_Severe", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f37eL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798463870");
    b.version(2);
    b.alias("severe");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatient_Severity_Moderate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Patient_Severity_Moderate", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524ff6bL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientSeverity", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x71b04c23524f52dL);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/512008214798466923");
    b.version(2);
    b.alias("moderate");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProbabilityCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProbabilityCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4813ad0fc64c280L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/324605317409456768");
    b.version(2);
    b.property("probabilityChance", 0x4813ad0fc64c2aeL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("324605317409456814").done();
    b.alias("probability");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRecentCovidContactProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RecentCovidContactProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732b9054L);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500222036");
    b.version(2);
    b.alias("Recent COVID contact");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResourceAvailableCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ResourceAvailableCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x3bf86d07f23cf033L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4321323723358269491");
    b.version(2);
    b.aggregate("availabilityExpression", 0x3bf86d07f260cb7eL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("4321323723360619390").done();
    b.alias("resource availability condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomSelectionCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d154aeL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035352238");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomSelectionLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d0be74L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035313780");
    b.version(2);
    b.aggregate("condition", 0x43b5616bd1d0e19bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("4878912887035322779").done();
    b.aggregate("rule", 0x43b5616bd1d0e19dL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x334005c766547220L).optional(false).ordered(true).multiple(false).origin("4878912887035322781").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomSelectionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomSelectionRule", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x334005c766547220L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3692958048417247776");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoomTypeCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RoomTypeCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d154adL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035352237");
    b.version(2);
    b.aggregate("AllowedRooms", 0x43b5616bd1d158adL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(true).origin("4878912887035353261").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSelectEmptyRoom() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "SelectEmptyRoom", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x43b5616bd1d0fb3bL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.RoomSelectionRule", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x334005c766547220L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4878912887035329339");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSymptomList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "SymptomList", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db47911f9L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265630201");
    b.version(2);
    b.aggregate("symptoms", 0x6ca3e29db4791203L).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x6ca3e29db4791132L).optional(true).ordered(true).multiple(true).origin("7828349744265630211").done();
    b.alias("Complete list of Symptoms");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeDistributionLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TimeDistributionLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x20b46d627ba89adL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/147289298423155117");
    b.version(2);
    b.property("Time", 0x20b46d627ba89aeL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("147289298423155118").done();
    b.property("Occurances", 0x20b46d627ba89b0L).type(PrimitiveTypeId.INTEGER).origin("147289298423155120").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeDistributionTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TimeDistributionTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x20b46d627ba89aaL);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.AbstractDurationLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x60a366dc12b6a870L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/147289298423155114");
    b.version(2);
    b.aggregate("timeLines", 0x20b46d627ba89abL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x20b46d627ba89adL).optional(true).ordered(true).multiple(true).origin("147289298423155115").done();
    b.alias("Time distribution table");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeOfDayCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TimeOfDayCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x3bf86d07f418f43dL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x74711ce3321800daL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/4321323723389465661");
    b.version(2);
    b.aggregate("expression", 0x3bf86d07f4a23f68L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("4321323723398463336").done();
    b.alias("time of day condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnvaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Unvaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61167L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238759");
    b.version(2);
    b.alias("Unvaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccinationStatus() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x34a8e13b09c97b2cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238721");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccineStatusProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccineStatusProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f40915dL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434489693");
    b.version(2);
    b.associate("disease", 0x18668ef26f40bdfaL).target(0xbb69d08796cc48caL, 0xaeb6c2cb27e532b0L, 0x25745663758ab012L).optional(false).origin("1758249876434501114").done();
    b.alias("Vaccine status");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForYes() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Yes", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e2L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231394");
    b.version(2);
    b.alias("Yes");
    return b.create();
  }
}

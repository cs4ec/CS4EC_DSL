package ActionCards.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActionCard = createDescriptorForActionCard();
  /*package*/ final ConceptDescriptor myConceptActionCardCondition = createDescriptorForActionCardCondition();
  /*package*/ final ConceptDescriptor myConceptActionCardReference = createDescriptorForActionCardReference();
  /*package*/ final ConceptDescriptor myConceptActionStep = createDescriptorForActionStep();
  /*package*/ final ConceptDescriptor myConceptAdmissionAction = createDescriptorForAdmissionAction();
  /*package*/ final ConceptDescriptor myConceptAttendanceRoute = createDescriptorForAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptAttendanceRouteCondition = createDescriptorForAttendanceRouteCondition();
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptAttributeLine = createDescriptorForAttributeLine();
  /*package*/ final ConceptDescriptor myConceptAttributeTable = createDescriptorForAttributeTable();
  /*package*/ final ConceptDescriptor myConceptBooleanExpression = createDescriptorForBooleanExpression();
  /*package*/ final ConceptDescriptor myConceptBranch = createDescriptorForBranch();
  /*package*/ final ConceptDescriptor myConceptBranchConditional = createDescriptorForBranchConditional();
  /*package*/ final ConceptDescriptor myConceptDiagnosticCondition = createDescriptorForDiagnosticCondition();
  /*package*/ final ConceptDescriptor myConceptDischargeAction = createDescriptorForDischargeAction();
  /*package*/ final ConceptDescriptor myConceptDisease = createDescriptorForDisease();
  /*package*/ final ConceptDescriptor myConceptDiseaseSymptom = createDescriptorForDiseaseSymptom();
  /*package*/ final ConceptDescriptor myConceptDiseaseSymptomReference = createDescriptorForDiseaseSymptomReference();
  /*package*/ final ConceptDescriptor myConceptDiseaseTest = createDescriptorForDiseaseTest();
  /*package*/ final ConceptDescriptor myConceptEDScenario = createDescriptorForEDScenario();
  /*package*/ final ConceptDescriptor myConceptElectiveAttendanceRoute = createDescriptorForElectiveAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptEmergencyAttendanceRoute = createDescriptorForEmergencyAttendanceRoute();
  /*package*/ final ConceptDescriptor myConceptFullyVaccinated = createDescriptorForFullyVaccinated();
  /*package*/ final ConceptDescriptor myConceptIPatientProperty = createDescriptorForIPatientProperty();
  /*package*/ final ConceptDescriptor myConceptImmunocompromisedCondition = createDescriptorForImmunocompromisedCondition();
  /*package*/ final ConceptDescriptor myConceptImmunosuppressedProperty = createDescriptorForImmunosuppressedProperty();
  /*package*/ final ConceptDescriptor myConceptInfectionStatusCondition = createDescriptorForInfectionStatusCondition();
  /*package*/ final ConceptDescriptor myConceptInfectionStatusProperty = createDescriptorForInfectionStatusProperty();
  /*package*/ final ConceptDescriptor myConceptLocationCapacityCondition = createDescriptorForLocationCapacityCondition();
  /*package*/ final ConceptDescriptor myConceptNo = createDescriptorForNo();
  /*package*/ final ConceptDescriptor myConceptObservationTest = createDescriptorForObservationTest();
  /*package*/ final ConceptDescriptor myConceptObservationsCondition = createDescriptorForObservationsCondition();
  /*package*/ final ConceptDescriptor myConceptPartiallyVaccinated = createDescriptorForPartiallyVaccinated();
  /*package*/ final ConceptDescriptor myConceptPatientArrivalLine = createDescriptorForPatientArrivalLine();
  /*package*/ final ConceptDescriptor myConceptPatientArrivals = createDescriptorForPatientArrivals();
  /*package*/ final ConceptDescriptor myConceptPatientProfile = createDescriptorForPatientProfile();
  /*package*/ final ConceptDescriptor myConceptPatientPropertyConditional = createDescriptorForPatientPropertyConditional();
  /*package*/ final ConceptDescriptor myConceptPatientPropertyReference = createDescriptorForPatientPropertyReference();
  /*package*/ final ConceptDescriptor myConceptProcessingTimeLine = createDescriptorForProcessingTimeLine();
  /*package*/ final ConceptDescriptor myConceptProcessingTimeTable = createDescriptorForProcessingTimeTable();
  /*package*/ final ConceptDescriptor myConceptRecentCOVIDContactCondition = createDescriptorForRecentCOVIDContactCondition();
  /*package*/ final ConceptDescriptor myConceptRecentCovidContactProperty = createDescriptorForRecentCovidContactProperty();
  /*package*/ final ConceptDescriptor myConceptResource = createDescriptorForResource();
  /*package*/ final ConceptDescriptor myConceptStaffNumber = createDescriptorForStaffNumber();
  /*package*/ final ConceptDescriptor myConceptStaffType = createDescriptorForStaffType();
  /*package*/ final ConceptDescriptor myConceptStaffTypeReference = createDescriptorForStaffTypeReference();
  /*package*/ final ConceptDescriptor myConceptSymptomList = createDescriptorForSymptomList();
  /*package*/ final ConceptDescriptor myConceptTest = createDescriptorForTest();
  /*package*/ final ConceptDescriptor myConceptTestCapturedDisease = createDescriptorForTestCapturedDisease();
  /*package*/ final ConceptDescriptor myConceptUnvaccinated = createDescriptorForUnvaccinated();
  /*package*/ final ConceptDescriptor myConceptVaccinationStatus = createDescriptorForVaccinationStatus();
  /*package*/ final ConceptDescriptor myConceptVaccineStatusCondition = createDescriptorForVaccineStatusCondition();
  /*package*/ final ConceptDescriptor myConceptVaccineStatusProperty = createDescriptorForVaccineStatusProperty();
  /*package*/ final ConceptDescriptor myConceptVariable = createDescriptorForVariable();
  /*package*/ final ConceptDescriptor myConceptYes = createDescriptorForYes();
  /*package*/ final EnumerationDescriptor myEnumerationE_Result = new EnumerationDescriptor_E_Result();
  /*package*/ final EnumerationDescriptor myEnumerationOperators = new EnumerationDescriptor_Operators();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.aggregatedLanguage(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, "AgentLanguage");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptActionCard, myConceptActionCardCondition, myConceptActionCardReference, myConceptActionStep, myConceptAdmissionAction, myConceptAttendanceRoute, myConceptAttendanceRouteCondition, myConceptAttribute, myConceptAttributeLine, myConceptAttributeTable, myConceptBooleanExpression, myConceptBranch, myConceptBranchConditional, myConceptDiagnosticCondition, myConceptDischargeAction, myConceptDisease, myConceptDiseaseSymptom, myConceptDiseaseSymptomReference, myConceptDiseaseTest, myConceptEDScenario, myConceptElectiveAttendanceRoute, myConceptEmergencyAttendanceRoute, myConceptFullyVaccinated, myConceptIPatientProperty, myConceptImmunocompromisedCondition, myConceptImmunosuppressedProperty, myConceptInfectionStatusCondition, myConceptInfectionStatusProperty, myConceptLocationCapacityCondition, myConceptNo, myConceptObservationTest, myConceptObservationsCondition, myConceptPartiallyVaccinated, myConceptPatientArrivalLine, myConceptPatientArrivals, myConceptPatientProfile, myConceptPatientPropertyConditional, myConceptPatientPropertyReference, myConceptProcessingTimeLine, myConceptProcessingTimeTable, myConceptRecentCOVIDContactCondition, myConceptRecentCovidContactProperty, myConceptResource, myConceptStaffNumber, myConceptStaffType, myConceptStaffTypeReference, myConceptSymptomList, myConceptTest, myConceptTestCapturedDisease, myConceptUnvaccinated, myConceptVaccinationStatus, myConceptVaccineStatusCondition, myConceptVaccineStatusProperty, myConceptVariable, myConceptYes);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.ActionCard:
        return myConceptActionCard;
      case LanguageConceptSwitch.ActionCardCondition:
        return myConceptActionCardCondition;
      case LanguageConceptSwitch.ActionCardReference:
        return myConceptActionCardReference;
      case LanguageConceptSwitch.ActionStep:
        return myConceptActionStep;
      case LanguageConceptSwitch.AdmissionAction:
        return myConceptAdmissionAction;
      case LanguageConceptSwitch.AttendanceRoute:
        return myConceptAttendanceRoute;
      case LanguageConceptSwitch.AttendanceRouteCondition:
        return myConceptAttendanceRouteCondition;
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.AttributeLine:
        return myConceptAttributeLine;
      case LanguageConceptSwitch.AttributeTable:
        return myConceptAttributeTable;
      case LanguageConceptSwitch.BooleanExpression:
        return myConceptBooleanExpression;
      case LanguageConceptSwitch.Branch:
        return myConceptBranch;
      case LanguageConceptSwitch.BranchConditional:
        return myConceptBranchConditional;
      case LanguageConceptSwitch.DiagnosticCondition:
        return myConceptDiagnosticCondition;
      case LanguageConceptSwitch.DischargeAction:
        return myConceptDischargeAction;
      case LanguageConceptSwitch.Disease:
        return myConceptDisease;
      case LanguageConceptSwitch.DiseaseSymptom:
        return myConceptDiseaseSymptom;
      case LanguageConceptSwitch.DiseaseSymptomReference:
        return myConceptDiseaseSymptomReference;
      case LanguageConceptSwitch.DiseaseTest:
        return myConceptDiseaseTest;
      case LanguageConceptSwitch.EDScenario:
        return myConceptEDScenario;
      case LanguageConceptSwitch.ElectiveAttendanceRoute:
        return myConceptElectiveAttendanceRoute;
      case LanguageConceptSwitch.EmergencyAttendanceRoute:
        return myConceptEmergencyAttendanceRoute;
      case LanguageConceptSwitch.FullyVaccinated:
        return myConceptFullyVaccinated;
      case LanguageConceptSwitch.IPatientProperty:
        return myConceptIPatientProperty;
      case LanguageConceptSwitch.ImmunocompromisedCondition:
        return myConceptImmunocompromisedCondition;
      case LanguageConceptSwitch.ImmunosuppressedProperty:
        return myConceptImmunosuppressedProperty;
      case LanguageConceptSwitch.InfectionStatusCondition:
        return myConceptInfectionStatusCondition;
      case LanguageConceptSwitch.InfectionStatusProperty:
        return myConceptInfectionStatusProperty;
      case LanguageConceptSwitch.LocationCapacityCondition:
        return myConceptLocationCapacityCondition;
      case LanguageConceptSwitch.No:
        return myConceptNo;
      case LanguageConceptSwitch.ObservationTest:
        return myConceptObservationTest;
      case LanguageConceptSwitch.ObservationsCondition:
        return myConceptObservationsCondition;
      case LanguageConceptSwitch.PartiallyVaccinated:
        return myConceptPartiallyVaccinated;
      case LanguageConceptSwitch.PatientArrivalLine:
        return myConceptPatientArrivalLine;
      case LanguageConceptSwitch.PatientArrivals:
        return myConceptPatientArrivals;
      case LanguageConceptSwitch.PatientProfile:
        return myConceptPatientProfile;
      case LanguageConceptSwitch.PatientPropertyConditional:
        return myConceptPatientPropertyConditional;
      case LanguageConceptSwitch.PatientPropertyReference:
        return myConceptPatientPropertyReference;
      case LanguageConceptSwitch.ProcessingTimeLine:
        return myConceptProcessingTimeLine;
      case LanguageConceptSwitch.ProcessingTimeTable:
        return myConceptProcessingTimeTable;
      case LanguageConceptSwitch.RecentCOVIDContactCondition:
        return myConceptRecentCOVIDContactCondition;
      case LanguageConceptSwitch.RecentCovidContactProperty:
        return myConceptRecentCovidContactProperty;
      case LanguageConceptSwitch.Resource:
        return myConceptResource;
      case LanguageConceptSwitch.StaffNumber:
        return myConceptStaffNumber;
      case LanguageConceptSwitch.StaffType:
        return myConceptStaffType;
      case LanguageConceptSwitch.StaffTypeReference:
        return myConceptStaffTypeReference;
      case LanguageConceptSwitch.SymptomList:
        return myConceptSymptomList;
      case LanguageConceptSwitch.Test:
        return myConceptTest;
      case LanguageConceptSwitch.TestCapturedDisease:
        return myConceptTestCapturedDisease;
      case LanguageConceptSwitch.Unvaccinated:
        return myConceptUnvaccinated;
      case LanguageConceptSwitch.VaccinationStatus:
        return myConceptVaccinationStatus;
      case LanguageConceptSwitch.VaccineStatusCondition:
        return myConceptVaccineStatusCondition;
      case LanguageConceptSwitch.VaccineStatusProperty:
        return myConceptVaccineStatusProperty;
      case LanguageConceptSwitch.Variable:
        return myConceptVariable;
      case LanguageConceptSwitch.Yes:
        return myConceptYes;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationE_Result, myEnumerationOperators);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3383707102503528548");
    b.version(2);
    b.property("requiresPatient", 0x3f10eb6deabdc338L).type(PrimitiveTypeId.BOOLEAN).origin("4544390881339097912").done();
    b.property("xPos", 0x749103faecdc6bd7L).type(PrimitiveTypeId.INTEGER).origin("8399499156273261527").done();
    b.property("yPos", 0x749103faecdc6bdaL).type(PrimitiveTypeId.INTEGER).origin("8399499156273261530").done();
    b.property("minDuration", 0x78ac3096ccb324L).type(PrimitiveTypeId.INTEGER).origin("33966321893684004").done();
    b.associate("resource", 0x29f0721df4a9974L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x29f0721df2f3819L).optional(true).origin("188877551434373492").done();
    b.associate("timeDistributionTable", 0x4f82e3275d69af14L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x296f74efb5610e89L).optional(true).origin("5729391434179129108").done();
    b.aggregate("staffTypeReference", 0x4af9c647efdb14f9L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647efda3a80L).optional(false).ordered(true).multiple(false).origin("5402567240276710649").done();
    b.aggregate("location", 0x3f10eb6deabbd805L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("4544390881338972165").done();
    b.aggregate("outgoingBranches", 0x29f0721df2f38bbL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("188877551432579259").done();
    b.aggregate("incomingBranches", 0x29f0721df719ebcL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("188877551436930748").done();
    b.aggregate("maxDuration", 0x4f82e3275c1ebe7cL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L).optional(true).ordered(true).multiple(false).origin("5729391434157440636").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCard() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCard", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06848L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/3383707102503528520");
    b.version(2);
    b.aggregate("Actions", 0x2ef557ae9cb06877L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L).optional(false).ordered(true).multiple(true).origin("3383707102503528567").done();
    b.aggregate("Branches", 0x2574566374fd2551L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL).optional(true).ordered(true).multiple(true).origin("2698877061866267985").done();
    b.aggregate("UsageCondition", 0x18668ef27386c3a5L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27386cf02L).optional(true).ordered(true).multiple(false).origin("1758249876506198949").done();
    b.aggregate("ActionCardReferences", 0x18668ef27581757bL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L).optional(true).ordered(true).multiple(true).origin("1758249876539405691").done();
    b.alias("Action Card");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27386cf02L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876506201858");
    b.version(2);
    b.aggregate("condition", 0x18668ef27386cf03L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("1758249876506201859").done();
    b.alias("Condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionCardReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionCardReference", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2758152c8L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876539396808");
    b.version(2);
    b.associate("actionCard", 0x18668ef2758152f8L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06848L).optional(false).origin("1758249876539396856").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActionStep() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ActionStep", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3455bL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5710949967853733211");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAdmissionAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AdmissionAction", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x78ac3095dfdf9aL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/33966321878163354");
    b.version(2);
    b.alias("admission action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508940893");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttendanceRouteCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttendanceRouteCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273c1dbbaL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876510071738");
    b.version(2);
    b.aggregate("attendanceRoute", 0x18668ef274f85a7bL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL).optional(false).ordered(true).multiple(false).origin("1758249876530420347").done();
    b.alias("Check patient attendance route");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Attribute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab027L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544103");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttributeLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a7cL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061888154236");
    b.version(2);
    b.property("prevalence", 0x5dc1936ab2964870L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("6755843002504464496").done();
    b.aggregate("possibleValue", 0x5dc1936ab296486eL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("6755843002504464494").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "AttributeTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a60L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061888154208");
    b.version(2);
    b.aggregate("attributeLines", 0x25745663764b1ad2L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a7cL).optional(true).ordered(true).multiple(true).origin("2698877061888154322").done();
    b.aggregate("patientProperty", 0x18668ef26f411a0aL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(false).ordered(true).multiple(false).origin("1758249876434524682").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231395");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Branch", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f3456eL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5710949967853733230");
    b.version(2);
    b.property("fromPort", 0x29f0721df719ea5L).type(PrimitiveTypeId.STRING).origin("188877551436930725").done();
    b.property("toPort", 0x29f0721df719ea7L).type(PrimitiveTypeId.STRING).origin("188877551436930727").done();
    b.associate("targetAction", 0x4f415ebce3f345b2L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L).optional(true).origin("5710949967853733298").done();
    b.associate("fromAction", 0x29f0721df71afb6L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L).optional(true).origin("188877551436935094").done();
    b.aggregate("condition", 0x2574566374febfecL).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(true).ordered(true).multiple(false).origin("2698877061866373100").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBranchConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876441168992");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDiagnosticCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DiagnosticCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x29f0721df36170cL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/188877551433029388");
    b.version(2);
    b.property("outcome", 0x25745663758ab474L).type(MetaIdFactory.dataTypeId(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab07cL)).origin("2698877061875545204").done();
    b.associate("test", 0x29f0721df37881fL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4936c0ffc391ca7L).optional(false).origin("188877551433123871").done();
    b.associate("disease", 0x3f397d5ebb790a0cL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab012L).optional(false).origin("4555810343887637004").done();
    b.alias("diagnostic condition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDischargeAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DischargeAction", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2756fb14cL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Action", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x2ef557ae9cb06864L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876538241356");
    b.version(2);
    b.alias("discharge action");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDisease() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Disease", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab012L);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.Attribute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab027L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2698877061875544082");
    b.version(2);
    b.aggregate("symptomReferences", 0x6ca3e29db479125cL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4791247L).optional(true).ordered(true).multiple(true).origin("7828349744265630300").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDiseaseSymptom() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DiseaseSymptom", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4791132L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Attribute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab027L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265630002");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDiseaseSymptomReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DiseaseSymptomReference", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4791247L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265630279");
    b.version(2);
    b.associate("symptom", 0x6ca3e29db4791251L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4791132L).optional(false).origin("7828349744265630289").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDiseaseTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "DiseaseTest", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4936c0ffc391ca7L);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.Test", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/329726013640088743");
    b.version(2);
    b.aggregate("CapturedDiseases", 0x549fe0474671ce43L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x549fe0474671cd38L).optional(false).ordered(true).multiple(true).origin("6097839017212104259").done();
    b.alias("disease test");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEDScenario() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "EDScenario", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647eff82e56L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5402567240278617686");
    b.version(2);
    b.property("runDuration", 0x4f82e3275d8c14dcL).type(PrimitiveTypeId.INTEGER).origin("5729391434181383388").done();
    b.aggregate("staffNumbers", 0x4af9c647eff82ea4L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647eff82e7bL).optional(true).ordered(true).multiple(true).origin("5402567240278617764").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElectiveAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ElectiveAttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09e71L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508941937");
    b.version(2);
    b.alias("Elective attendance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmergencyAttendanceRoute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "EmergencyAttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09c56L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.AttendanceRoute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876508941398");
    b.version(2);
    b.alias("Emergency Attendance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFullyVaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "FullyVaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61137L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238711");
    b.version(2);
    b.alias("fully vaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPatientProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "IPatientProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.interface_();
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434336588");
    b.version(2);
    b.property("name", 0x18668ef270f3bdacL).type(PrimitiveTypeId.STRING).origin("1758249876463009196").done();
    b.aggregate("possibleValues", 0x18668ef26f407627L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(true).ordered(true).multiple(true).origin("1758249876434482727").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImmunocompromisedCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ImmunocompromisedCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2755ea288L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876537123464");
    b.version(2);
    b.alias("check if patient is immuno-compromised");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForImmunosuppressedProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ImmunosuppressedProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2755e811eL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876537114910");
    b.version(2);
    b.alias("ImmunoCompromised");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfectionStatusCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "InfectionStatusCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef27101e2faL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876463936250");
    b.version(2);
    b.alias("check infection status of a patient");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfectionStatusProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "InfectionStatusProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e7089L);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434350217");
    b.version(2);
    b.associate("disease", 0x18668ef26f40918bL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab012L).optional(false).origin("1758249876434489739").done();
    b.alias("Infection Status");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocationCapacityCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "LocationCapacityCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4ab0a0c760d991ecL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5381978332891550188");
    b.version(2);
    b.property("minCapacity", 0x4ab0a0c760d99264L).type(PrimitiveTypeId.INTEGER).origin("5381978332891550308").done();
    b.aggregate("location", 0x4ab0a0c760d9922cL).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(true).ordered(true).multiple(false).origin("5381978332891550252").done();
    b.alias("Check capacity of a room");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "No", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e4L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231396");
    b.version(2);
    b.alias("No");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObservationTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ObservationTest", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db47911a7L);
    b.class_(false, false, true);
    b.super_("ActionCards.structure.Test", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265630119");
    b.version(2);
    b.aggregate("SymptomReference", 0x6ca3e29db47912c5L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4791247L).optional(true).ordered(true).multiple(true).origin("7828349744265630405").done();
    b.alias("observation");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForObservationsCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ObservationsCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4926ae3L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744267291363");
    b.version(2);
    b.property("outcome", 0x6ca3e29db4926b23L).type(MetaIdFactory.dataTypeId(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab07cL)).origin("7828349744267291427").done();
    b.associate("test", 0x6ca3e29db4926b37L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db47911a7L).optional(true).origin("7828349744267291447").done();
    b.alias("observations result");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPartiallyVaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PartiallyVaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61154L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238740");
    b.version(2);
    b.alias("partially vaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientArrivalLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientArrivalLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x27ebd2392beaa324L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/2876623929997959972");
    b.version(2);
    b.property("Time", 0x27ebd2392beaa32eL).type(PrimitiveTypeId.INTEGER).origin("2876623929997959982").done();
    b.property("NumPatientsInHour", 0x27ebd2392beaa330L).type(PrimitiveTypeId.INTEGER).origin("2876623929997959984").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientArrivals() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientArrivals", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x637eade0e62ce2b8L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7169358838266389176");
    b.version(2);
    b.aggregate("PatientArrivalLines", 0x27ebd2392beaa3d1L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x27ebd2392beaa324L).optional(true).ordered(true).multiple(true).origin("2876623929997960145").done();
    b.aggregate("ArrivalLocation", 0xaabf015bf63b5d0L).target(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x5dafd33967953caaL).optional(false).ordered(true).multiple(false).origin("768972137592763856").done();
    b.alias("Patient Arrivals");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientProfile() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientProfile", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0xaabf015be947306L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/768972137579180806");
    b.version(2);
    b.aggregate("attributes", 0xaabf015be951259L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663764b1a60L).optional(true).ordered(true).multiple(true).origin("768972137579221593").done();
    b.aggregate("arrivalRate", 0xaabf015be951280L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x637eade0e62ce2b8L).optional(false).ordered(true).multiple(false).origin("768972137579221632").done();
    b.aggregate("attendanceRoute", 0x18668ef2739f49dfL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef273b09a5dL).optional(false).ordered(true).multiple(false).origin("1758249876507806175").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientPropertyConditional() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BranchConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fa67c60L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876462569833");
    b.version(2);
    b.associate("patientProperty", 0x18668ef27115ff2aL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(false).origin("1758249876465254186").done();
    b.aggregate("checkValue", 0x18668ef270ed0a03L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("1758249876462569987").done();
    b.alias("patient property");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPatientPropertyReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "PatientPropertyReference", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0a06L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876462569990");
    b.version(2);
    b.associate("property", 0x18668ef270ed0a07L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL).optional(false).origin("1758249876462569991").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessingTimeLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProcessingTimeLine", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0ee1aL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1645043697875742234");
    b.version(2);
    b.property("Time", 0x16d45e8703e0ee36L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("1645043697875742262").done();
    b.property("Occurances", 0x16d45e8703e0ee38L).type(PrimitiveTypeId.INTEGER).origin("1645043697875742264").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessingTimeTable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "ProcessingTimeTable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0edf5L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1645043697875742197");
    b.version(2);
    b.aggregate("ProcessingTimeLines", 0x16d45e8703e0ee61L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0ee1aL).optional(true).ordered(true).multiple(true).origin("1645043697875742305").done();
    b.alias("Test processing time table");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRecentCOVIDContactCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RecentCOVIDContactCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bde64L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500242020");
    b.version(2);
    b.alias("check if patient had a recent COVID contact");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRecentCovidContactProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "RecentCovidContactProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732b9054L);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500222036");
    b.version(2);
    b.alias("Recent COVID contact");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForResource() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Resource", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x29f0721df2f3819L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/188877551432579097");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaffNumber() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "StaffNumber", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647eff82e7bL);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5402567240278617723");
    b.version(2);
    b.property("number", 0x4af9c647eff82e85L).type(PrimitiveTypeId.INTEGER).origin("5402567240278617733").done();
    b.associate("staff", 0x4af9c647eff82e87L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f346ecL).optional(false).origin("5402567240278617735").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaffType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "StaffType", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f346ecL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5710949967853733612");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaffTypeReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "StaffTypeReference", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4af9c647efda3a80L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/5402567240276654720");
    b.version(2);
    b.associate("staffType", 0x4af9c647efda3aa5L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x4f415ebce3f346ecL).optional(false).origin("5402567240276654757").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSymptomList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "SymptomList", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db47911f9L);
    b.class_(false, false, true);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265630201");
    b.version(2);
    b.aggregate("symptoms", 0x6ca3e29db4791203L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db4791132L).optional(true).ordered(true).multiple(true).origin("7828349744265630211").done();
    b.alias("Complete list of Symptoms");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Test", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x6ca3e29db479214fL);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Resource", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x29f0721df2f3819L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/7828349744265634127");
    b.version(2);
    b.aggregate("ProcessingTimeTable", 0x6ca3e29db4792188L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x16d45e8703e0edf5L).optional(true).ordered(true).multiple(false).origin("7828349744265634184").done();
    b.alias("test");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestCapturedDisease() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "TestCapturedDisease", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x549fe0474671cd38L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.Attribute", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab027L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/6097839017212103992");
    b.version(2);
    b.property("Sensitivity", 0x549fe0474671cd6fL).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("6097839017212104047").done();
    b.property("Specificity", 0x549fe0474671cd70L).type(MetaIdFactory.dataTypeId(0x7dcff301ba01414eL, 0x8574a8f6da31876bL, 0x6773e65d467289bcL)).origin("6097839017212104048").done();
    b.associate("disease", 0x549fe0474671cd85L).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab012L).optional(false).origin("6097839017212104069").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnvaccinated() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Unvaccinated", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61167L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238759");
    b.version(2);
    b.alias("Unvaccinated");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccinationStatus() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccinationStatus", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26fc61141L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876443238721");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccineStatusCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccineStatusCondition", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f431e45L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.PatientPropertyConditional", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef270ed0969L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434656837");
    b.version(2);
    b.alias("check vaccine status of patient");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVaccineStatusProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "VaccineStatusProperty", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f40915dL);
    b.class_(false, false, false);
    b.parent(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef26f3e3b4cL);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876434489693");
    b.version(2);
    b.associate("disease", 0x18668ef26f40bdfaL).target(0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x25745663758ab012L).optional(false).origin("1758249876434501114").done();
    b.alias("Vaccine status");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Variable", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x29f0721df307244L);
    b.class_(false, false, false);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/188877551432659524");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForYes() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ActionCards", "Yes", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e2L);
    b.class_(false, false, false);
    b.super_("ActionCards.structure.BooleanExpression", 0xb3cac82cd02446bcL, 0xb485624ad80c3cc2L, 0x18668ef2732bb4e3L);
    b.origin("r:e220bde4-f6e0-4580-ba24-92680041be3b(ActionCards.structure)/1758249876500231394");
    b.version(2);
    b.alias("Yes");
    return b.create();
  }
}
